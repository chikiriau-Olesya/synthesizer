{"ast":null,"code":"import * as Tone from 'tone';\nimport { generateUniqId } from '../utilities';\nvar synthSettings = {\n  volume: 0,\n  detune: 0,\n  portamento: 0,\n  envelope: {\n    attack: 0,\n    attackCurve: 'linear',\n    decay: 0,\n    decayCurve: 'linear',\n    sustain: 0,\n    release: 1,\n    releaseCurve: 'sine'\n  },\n  oscillator: {\n    type: 'fatsawtooth',\n    modulationType: 'sine',\n    // partialCount: 0,\n    // partials: [],\n    phase: 0,\n    harmonicity: 0\n  }\n};\nvar reverbSettings = {\n  wet: 1,\n  decay: 7.15,\n  preDelay: 0.01\n};\nvar channelSettings = {\n  volume: -14,\n  pan: 0,\n  mute: false,\n  solo: false\n}; // function instrument() {\n\nvar synthNode = new Tone.Synth(synthSettings);\nvar reverbNode = new Tone.Reverb(reverbSettings); // const chorusNode = new Tone.Chorus(chorusSettings).start()\n// const freeverbNode = new Tone.Freeverb(freeverbSettings)\n// const pingPongDelayNode = new Tone.PingPongDelay(pingPongDelaySettings)\n// const tremoloNode = new Tone.Tremolo(tremoloSettings)\n\nvar channelNode = new Tone.Channel(channelSettings).toDestination();\nsynthNode.chain(reverbNode, channelNode);\nvar instrument = [{\n  id: generateUniqId(),\n  name: 'Melody Synth',\n  type: 'ToneSynth',\n  node: synthNode,\n  settings: synthSettings\n}, {\n  id: generateUniqId(),\n  name: 'Reverb',\n  type: 'ReverbEffect',\n  node: reverbNode,\n  settings: reverbSettings\n}, {\n  id: generateUniqId(),\n  name: 'Channel',\n  type: 'Channel',\n  node: channelNode,\n  settings: channelSettings\n}];\nvar v = 1;\nvar part = new Tone.Part(function (time, note) {\n  synthNode.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n}, [{\n  time: '1:0:0',\n  noteName: 'G4',\n  velocity: 1,\n  duration: '1n'\n}, {\n  time: '2:0:0',\n  noteName: 'F4',\n  velocity: 1,\n  duration: '1n'\n}]);\npart.loopEnd = '1m';\npart.loop = true;\nexport { instrument, part };","map":{"version":3,"sources":["/Users/olesyashevchenko/synthExample/app/javascript/tunes/melody_synth.js"],"names":["Tone","generateUniqId","synthSettings","volume","detune","portamento","envelope","attack","attackCurve","decay","decayCurve","sustain","release","releaseCurve","oscillator","type","modulationType","phase","harmonicity","reverbSettings","wet","preDelay","channelSettings","pan","mute","solo","synthNode","Synth","reverbNode","Reverb","channelNode","Channel","toDestination","chain","instrument","id","name","node","settings","v","part","Part","time","note","triggerAttackRelease","noteName","duration","velocity","loopEnd","loop"],"mappings":"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","sourcesContent":["import * as Tone from 'tone'\nimport { generateUniqId } from '../utilities'\n\nconst synthSettings = {\n  volume: 0,\n  detune: 0,\n  portamento: 0,\n  envelope: {\n    attack: 0,\n    attackCurve: 'linear',\n    decay: 0,\n    decayCurve: 'linear',\n    sustain: 0,\n    release: 1,\n    releaseCurve: 'sine'\n  },\n  oscillator: {\n    type: 'fatsawtooth',\n    modulationType: 'sine',\n    // partialCount: 0,\n    // partials: [],\n    phase: 0,\n    harmonicity: 0\n  }\n}\n\nconst reverbSettings = {\n  wet: 1,\n  decay: 7.15,\n  preDelay: 0.01\n}\n\nconst channelSettings = {\n  volume: -14,\n  pan: 0,\n  mute: false,\n  solo: false\n}\n\n// function instrument() {\nconst synthNode = new Tone.Synth(synthSettings)\nconst reverbNode = new Tone.Reverb(reverbSettings)\n// const chorusNode = new Tone.Chorus(chorusSettings).start()\n// const freeverbNode = new Tone.Freeverb(freeverbSettings)\n// const pingPongDelayNode = new Tone.PingPongDelay(pingPongDelaySettings)\n// const tremoloNode = new Tone.Tremolo(tremoloSettings)\nconst channelNode = new Tone.Channel(channelSettings).toDestination()\n\nsynthNode.chain(reverbNode, channelNode)\n\nconst instrument = [\n  {\n    id: generateUniqId(),\n    name: 'Melody Synth',\n    type: 'ToneSynth',\n    node: synthNode,\n    settings: synthSettings\n  },\n  {\n    id: generateUniqId(),\n    name: 'Reverb',\n    type: 'ReverbEffect',\n    node: reverbNode,\n    settings: reverbSettings\n  },\n  {\n    id: generateUniqId(),\n    name: 'Channel',\n    type: 'Channel',\n    node: channelNode,\n    settings: channelSettings\n  }\n]\n\nconst v = 1\n\nconst part = new Tone.Part(\n  function (time, note) {\n    synthNode.triggerAttackRelease(\n      note.noteName,\n      note.duration,\n      time,\n      note.velocity\n    )\n  },\n  [\n    {\n      time: '1:0:0',\n      noteName: 'G4',\n      velocity: 1,\n      duration: '1n'\n    },\n    {\n      time: '2:0:0',\n      noteName: 'F4',\n      velocity: 1,\n      duration: '1n'\n    }\n  ]\n)\n\npart.loopEnd = '1m'\npart.loop = true\n\nexport { instrument, part }\n"]},"metadata":{},"sourceType":"module"}