{"ast":null,"code":"import * as Tone from 'tone';\nimport { generateUniqId } from '../utilities';\nvar synthSettings = {\n  volume: 0.8,\n  detune: 0,\n  portamento: 0.05,\n  envelope: {\n    attack: 0,\n    attackCurve: 'exponential',\n    decay: 0,\n    decayCurve: 'exponential',\n    sustain: 1,\n    release: 0,\n    releaseCurve: 'exponential'\n  },\n  oscillator: {\n    type: 'fattriangle',\n    modulationType: 'shine',\n    // partialCount: 0,\n    // partials: [],\n    phase: 0,\n    harmonicity: 0.5\n  }\n};\nvar autoFilterSettings = {\n  wet: 0,\n  type: 'shine',\n  frequency: 1,\n  depth: 1,\n  baseFrequency: 200,\n  octaves: 2.6,\n  filter: {\n    type: 'lowpass',\n    frequency: 100,\n    rolloff: -12,\n    Q: 1\n  }\n};\nvar autoPannerSettings = {\n  wet: 0,\n  type: 'sine',\n  frequency: 1,\n  depth: 1\n};\nvar autoWahSettings = {\n  wet: 0,\n  baseFrequency: 100,\n  octaves: 6,\n  sensitivity: 0,\n  Q: 2,\n  gain: 2,\n  follower: 0.1\n}; // const bitCrusherSettings = {\n//   wet: 0,\n//   bits: 4\n// }\n\nvar chebyshevSettings = {\n  wet: 0,\n  order: 50,\n  oversample: 'none'\n};\nvar chorusSettings = {\n  wet: 0,\n  type: 'sine',\n  frequency: 1.5,\n  delayTime: 3.5,\n  depth: 0.7,\n  spread: 180\n};\nvar distortionSettings = {\n  wet: 0,\n  distortion: 0,\n  oversample: '4x'\n};\nvar feedbackDelaySettings = {\n  wet: 0,\n  delayTime: 0.8,\n  maxDelay: 0.8\n};\nvar freeverbSettings = {\n  wet: 0.9,\n  roomSize: 0.08,\n  dampening: 40\n};\nvar frequencyShifterSettings = {\n  wet: 0,\n  frequency: 42\n};\nvar jcReverbSettings = {\n  wet: 0,\n  roomSize: 0.5\n}; // const midSideSettings = {\n//   wet: 0\n// }\n\nvar phaserSettings = {\n  wet: 0,\n  frequency: 0.5,\n  octaves: 3,\n  stages: 10,\n  Q: 10,\n  baseFrequency: 350\n};\nvar pingPongDelaySettings = {\n  wet: 0,\n  delayTime: 0.25,\n  maxDelayTime: 1\n};\nvar pitchShiftSettings = {\n  wet: 0.75,\n  pitch: 0,\n  windowSize: 0.1,\n  delayTime: 0,\n  feedback: 0.315\n};\nvar reverbSettings = {\n  wet: 0.5,\n  decay: 7.15,\n  preDelay: 0.01\n};\nvar stereoWidenerSettings = {\n  wet: 0,\n  width: 0.5\n};\nvar tremoloSettings = {\n  wet: 0,\n  frequency: 10,\n  type: 'sine',\n  depth: 0.5,\n  spread: 180\n};\nvar vibratoSettings = {\n  wet: 0,\n  maxDelay: 0.005,\n  frequency: 5,\n  depth: 0.1,\n  type: 'sine'\n};\nvar channelSettings = {\n  volume: -6,\n  pan: 0,\n  mute: false,\n  solo: false\n};\nvar synthNode = new Tone.Synth(synthSettings); // const autoFilterNode = new Tone.AutoFilter(autoFilterSettings).start()\n// const autoPannerNode = new Tone.AutoPanner(autoPannerSettings).start()\n// const autoWahNode = new Tone.AutoWah(autoWahSettings)\n// // const bitCrusherNode = new Tone.BitCrusher(bitCrusherSettings)\n// const chebyshevNode = new Tone.Chebyshev(chebyshevSettings)\n// const chorusNode = new Tone.Chorus(chorusSettings)\n// const distortionNode = new Tone.Distortion(distortionSettings)\n// const feedbackDelayNode = new Tone.FeedbackDelay(feedbackDelaySettings)\n// const freeverbNode = new Tone.Freeverb(freeverbSettings)\n// const frequencyShifterNode = new Tone.FrequencyShifter(frequencyShifterSettings)\n// const jcReverbNode = new Tone.JCReverb(jcReverbSettings)\n// // const midSideNode = new Tone.MidSideEffect(midSideSettings)\n// const phaserNode = new Tone.Phaser(phaserSettings)\n// const pingPongDelayNode = new Tone.PingPongDelay(pingPongDelaySettings)\n// const pitchShiftNode = new Tone.PitchShift(pitchShiftSettings)\n// const reverbNode = new Tone.Reverb(reverbSettings)\n// const stereoWidenerNode = new Tone.StereoWidener(stereoWidenerSettings)\n// const tremoloNode = new Tone.Tremolo(tremoloSettings)\n// const vibratoNode = new Tone.Vibrato(vibratoSettings)\n\nvar channelNode = new Tone.Channel(channelSettings).toDestination();\nsynthNode.chain( // autoFilterNode,\n// autoPannerNode,\n// autoWahNode,\n// // bitCrusherNode,\n// chebyshevNode,\n// chorusNode,\n// distortionNode,\n// feedbackDelayNode,\n// freeverbNode,\n// frequencyShifterNode,\n// jcReverbNode,\n// // midSideNode,\n// phaserNode,\n// pingPongDelayNode,\n// pitchShiftNode,\n// reverbNode,\n// stereoWidenerNode,\n// tremoloNode,\n// vibratoNode,\nchannelNode);\nvar instrument = [{\n  id: generateUniqId(),\n  name: 'All effect Synth',\n  type: 'ToneSynth',\n  node: synthNode,\n  settings: synthSettings\n}, // {\n//   id: generateUniqId(),\n//   name: 'Auto Filter',\n//   type: 'AutoFilterEffect',\n//   node: autoFilterNode,\n//   settings: autoFilterSettings\n// },\n// {\n//   id: generateUniqId(),\n//   name: 'Auto Panner',\n//   type: 'AutoPannerEffect',\n//   node: autoPannerNode,\n//   settings: autoPannerSettings\n// },\n// {\n//   id: generateUniqId(),\n//   name: 'Auto Wah',\n//   type: 'AutoWahEffect',\n//   node: autoWahNode,\n//   settings: autoWahSettings\n// },\n// // {\n// //   id: generateUniqId(),\n// //   name: 'Bit Crusher',\n// //   type: 'BitCrusherEffect',\n// //   node: bitCrusherNode,\n// //   settings: bitCrusherSettings\n// // },\n// {\n//   id: generateUniqId(),\n//   name: 'Chebyshev',\n//   type: 'ChebyshevEffect',\n//   node: chebyshevNode,\n//   settings: chebyshevSettings\n// },\n// {\n//   id: generateUniqId(),\n//   name: 'Chorus',\n//   type: 'ChorusEffect',\n//   node: chorusNode,\n//   settings: chorusSettings\n// },\n// {\n//   id: generateUniqId(),\n//   name: 'Distortion',\n//   type: 'DistortionEffect',\n//   node: distortionNode,\n//   settings: distortionSettings\n// },\n// {\n//   id: generateUniqId(),\n//   name: 'Feedback Delay',\n//   type: 'FeedbackDelayEffect',\n//   node: feedbackDelayNode,\n//   settings: feedbackDelaySettings\n// },\n// {\n//   id: generateUniqId(),\n//   name: 'Freeverb',\n//   type: 'FreeverbEffect',\n//   node: freeverbNode,\n//   settings: freeverbSettings\n// },\n// {\n//   id: generateUniqId(),\n//   name: 'Frequency Shift',\n//   type: 'FrequencyShifterEffect',\n//   node: frequencyShifterNode,\n//   settings: frequencyShifterSettings\n// },\n// {\n//   id: generateUniqId(),\n//   name: 'JC Reverb',\n//   type: 'JCReverbEffect',\n//   node: jcReverbNode,\n//   settings: jcReverbSettings\n// },\n// // {\n// //   id: generateUniqId(),\n// //   name: 'Mid Side Effect',\n// //   type: 'MidSideEffect',\n// //   node: midSideNode,\n// //   settings: midSideSettings\n// // },\n// {\n//   id: generateUniqId(),\n//   name: 'Phaser',\n//   type: 'PhaserEffect',\n//   node: phaserNode,\n//   settings: phaserSettings\n// },\n// {\n//   id: generateUniqId(),\n//   name: 'Ping Pong Delay',\n//   type: 'PingPongDelayEffect',\n//   node: pingPongDelayNode,\n//   settings: pingPongDelaySettings\n// },\n// {\n//   id: generateUniqId(),\n//   name: 'Pitch Shift',\n//   type: 'PitchShiftEffect',\n//   node: pitchShiftNode,\n//   settings: pitchShiftSettings\n// },\n// {\n//   id: generateUniqId(),\n//   name: 'Reverb',\n//   type: 'ReverbEffect',\n//   node: reverbNode,\n//   settings: reverbSettings\n// },\n// {\n//   id: generateUniqId(),\n//   name: 'Stereo Widener',\n//   type: 'StereoWidenerEffect',\n//   node: stereoWidenerNode,\n//   settings: stereoWidenerSettings\n// },\n// {\n//   id: generateUniqId(),\n//   name: 'Tremolo',\n//   type: 'TremoloEffect',\n//   node: tremoloNode,\n//   settings: tremoloSettings\n// },\n// {\n//   id: generateUniqId(),\n//   name: 'Vibrato',\n//   type: 'VibratoEffect',\n//   node: vibratoNode,\n//   settings: vibratoSettings\n// },\n{\n  id: generateUniqId(),\n  name: 'Channel',\n  type: 'Channel',\n  node: channelNode,\n  settings: channelSettings\n}]; // prettier-ignore nathan taylor 10.7PO sync\n\nvar v = 1;\nvar part = new Tone.Part(function (time, note) {\n  synthNode.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n}, [{\n  time: '0:0:0',\n  noteName: 'A4#',\n  velocity: 1,\n  duration: '4n'\n}, {\n  time: '0:1:0',\n  noteName: 'C5',\n  velocity: 1,\n  duration: '2n'\n}, {\n  time: '0:3:0',\n  noteName: 'A4#',\n  velocity: 1,\n  duration: '4n'\n}, {\n  time: '1:0:0',\n  noteName: 'D5',\n  velocity: 1,\n  duration: '2n'\n}, {\n  time: '1:3:0',\n  noteName: 'C5',\n  velocity: 1,\n  duration: '4n'\n}, {\n  time: '1:4:0',\n  noteName: 'A4#',\n  velocity: 1,\n  duration: '8n'\n}, {\n  time: '2:0:0',\n  noteName: 'D5',\n  velocity: 1,\n  duration: '2n'\n}, {\n  time: '2:1:0',\n  noteName: 'C5',\n  velocity: 1,\n  duration: '8n'\n}, {\n  time: '2:1:0',\n  noteName: 'C5',\n  velocity: 1,\n  duration: '4n'\n}]);\npart.loopEnd = '8m';\npart.loop = true;\nexport { instrument, part };","map":{"version":3,"sources":["/Users/olesyashevchenko/synthExample/app/javascript/tunes/all_effects_synth.js"],"names":["Tone","generateUniqId","synthSettings","volume","detune","portamento","envelope","attack","attackCurve","decay","decayCurve","sustain","release","releaseCurve","oscillator","type","modulationType","phase","harmonicity","autoFilterSettings","wet","frequency","depth","baseFrequency","octaves","filter","rolloff","Q","autoPannerSettings","autoWahSettings","sensitivity","gain","follower","chebyshevSettings","order","oversample","chorusSettings","delayTime","spread","distortionSettings","distortion","feedbackDelaySettings","maxDelay","freeverbSettings","roomSize","dampening","frequencyShifterSettings","jcReverbSettings","phaserSettings","stages","pingPongDelaySettings","maxDelayTime","pitchShiftSettings","pitch","windowSize","feedback","reverbSettings","preDelay","stereoWidenerSettings","width","tremoloSettings","vibratoSettings","channelSettings","pan","mute","solo","synthNode","Synth","channelNode","Channel","toDestination","chain","instrument","id","name","node","settings","v","part","Part","time","note","triggerAttackRelease","noteName","duration","velocity","loopEnd","loop"],"mappings":"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","sourcesContent":["import * as Tone from 'tone'\nimport { generateUniqId } from '../utilities'\n\nconst synthSettings = {\n  volume: 0.8,\n  detune: 0,\n  portamento: 0.05,\n  envelope: {\n    attack: 0,\n    attackCurve: 'exponential',\n    decay: 0,\n    decayCurve: 'exponential',\n    sustain: 1,\n    release: 0,\n    releaseCurve: 'exponential'\n  },\n  oscillator: {\n    type: 'fattriangle',\n    modulationType: 'shine',\n    // partialCount: 0,\n    // partials: [],\n    phase: 0,\n    harmonicity: 0.5\n  }\n}\n\nconst autoFilterSettings = {\n  wet: 0,\n  type: 'shine',\n  frequency: 1,\n  depth: 1,\n  baseFrequency: 200,\n  octaves: 2.6,\n  filter: {\n    type: 'lowpass',\n    frequency: 100,\n    rolloff: -12,\n    Q: 1\n  }\n}\n\nconst autoPannerSettings = {\n  wet: 0,\n  type: 'sine',\n  frequency: 1,\n  depth: 1\n}\n\nconst autoWahSettings = {\n  wet: 0,\n  baseFrequency: 100,\n  octaves: 6,\n  sensitivity: 0,\n  Q: 2,\n  gain: 2,\n  follower: 0.1\n}\n\n// const bitCrusherSettings = {\n//   wet: 0,\n//   bits: 4\n// }\n\nconst chebyshevSettings = {\n  wet: 0,\n  order: 50,\n  oversample: 'none'\n}\n\nconst chorusSettings = {\n  wet: 0,\n  type: 'sine',\n  frequency: 1.5,\n  delayTime: 3.5,\n  depth: 0.7,\n  spread: 180\n}\n\nconst distortionSettings = {\n  wet: 0,\n  distortion: 0,\n  oversample: '4x'\n}\n\nconst feedbackDelaySettings = {\n  wet: 0,\n  delayTime: 0.8,\n  maxDelay: 0.8\n}\n\nconst freeverbSettings = {\n  wet: 0.9,\n  roomSize: 0.08,\n  dampening: 40\n}\n\nconst frequencyShifterSettings = {\n  wet: 0,\n  frequency: 42\n}\n\nconst jcReverbSettings = {\n  wet: 0,\n  roomSize: 0.5\n}\n\n// const midSideSettings = {\n//   wet: 0\n// }\n\nconst phaserSettings = {\n  wet: 0,\n  frequency: 0.5,\n  octaves: 3,\n  stages: 10,\n  Q: 10,\n  baseFrequency: 350\n}\n\nconst pingPongDelaySettings = {\n  wet: 0,\n  delayTime: 0.25,\n  maxDelayTime: 1\n}\n\nconst pitchShiftSettings = {\n  wet: 0.75,\n  pitch: 0,\n  windowSize: 0.1,\n  delayTime: 0,\n  feedback: 0.315\n}\n\nconst reverbSettings = {\n  wet: 0.5,\n  decay: 7.15,\n  preDelay: 0.01\n}\n\nconst stereoWidenerSettings = {\n  wet: 0,\n  width: 0.5\n}\n\nconst tremoloSettings = {\n  wet: 0,\n  frequency: 10,\n  type: 'sine',\n  depth: 0.5,\n  spread: 180\n}\n\nconst vibratoSettings = {\n  wet: 0,\n  maxDelay: 0.005,\n  frequency: 5,\n  depth: 0.1,\n  type: 'sine'\n}\n\nconst channelSettings = {\n  volume: -6,\n  pan: 0,\n  mute: false,\n  solo: false\n}\n\nconst synthNode = new Tone.Synth(synthSettings)\n// const autoFilterNode = new Tone.AutoFilter(autoFilterSettings).start()\n// const autoPannerNode = new Tone.AutoPanner(autoPannerSettings).start()\n// const autoWahNode = new Tone.AutoWah(autoWahSettings)\n// // const bitCrusherNode = new Tone.BitCrusher(bitCrusherSettings)\n// const chebyshevNode = new Tone.Chebyshev(chebyshevSettings)\n// const chorusNode = new Tone.Chorus(chorusSettings)\n// const distortionNode = new Tone.Distortion(distortionSettings)\n// const feedbackDelayNode = new Tone.FeedbackDelay(feedbackDelaySettings)\n// const freeverbNode = new Tone.Freeverb(freeverbSettings)\n// const frequencyShifterNode = new Tone.FrequencyShifter(frequencyShifterSettings)\n// const jcReverbNode = new Tone.JCReverb(jcReverbSettings)\n// // const midSideNode = new Tone.MidSideEffect(midSideSettings)\n// const phaserNode = new Tone.Phaser(phaserSettings)\n// const pingPongDelayNode = new Tone.PingPongDelay(pingPongDelaySettings)\n// const pitchShiftNode = new Tone.PitchShift(pitchShiftSettings)\n// const reverbNode = new Tone.Reverb(reverbSettings)\n// const stereoWidenerNode = new Tone.StereoWidener(stereoWidenerSettings)\n// const tremoloNode = new Tone.Tremolo(tremoloSettings)\n// const vibratoNode = new Tone.Vibrato(vibratoSettings)\nconst channelNode = new Tone.Channel(channelSettings).toDestination()\n\nsynthNode.chain(\n  // autoFilterNode,\n  // autoPannerNode,\n  // autoWahNode,\n  // // bitCrusherNode,\n  // chebyshevNode,\n  // chorusNode,\n  // distortionNode,\n  // feedbackDelayNode,\n  // freeverbNode,\n  // frequencyShifterNode,\n  // jcReverbNode,\n  // // midSideNode,\n  // phaserNode,\n  // pingPongDelayNode,\n  // pitchShiftNode,\n  // reverbNode,\n  // stereoWidenerNode,\n  // tremoloNode,\n  // vibratoNode,\n  channelNode\n)\n\nconst instrument = [\n  {\n    id: generateUniqId(),\n    name: 'All effect Synth',\n    type: 'ToneSynth',\n    node: synthNode,\n    settings: synthSettings\n  },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Auto Filter',\n  //   type: 'AutoFilterEffect',\n  //   node: autoFilterNode,\n  //   settings: autoFilterSettings\n  // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Auto Panner',\n  //   type: 'AutoPannerEffect',\n  //   node: autoPannerNode,\n  //   settings: autoPannerSettings\n  // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Auto Wah',\n  //   type: 'AutoWahEffect',\n  //   node: autoWahNode,\n  //   settings: autoWahSettings\n  // },\n  // // {\n  // //   id: generateUniqId(),\n  // //   name: 'Bit Crusher',\n  // //   type: 'BitCrusherEffect',\n  // //   node: bitCrusherNode,\n  // //   settings: bitCrusherSettings\n  // // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Chebyshev',\n  //   type: 'ChebyshevEffect',\n  //   node: chebyshevNode,\n  //   settings: chebyshevSettings\n  // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Chorus',\n  //   type: 'ChorusEffect',\n  //   node: chorusNode,\n  //   settings: chorusSettings\n  // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Distortion',\n  //   type: 'DistortionEffect',\n  //   node: distortionNode,\n  //   settings: distortionSettings\n  // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Feedback Delay',\n  //   type: 'FeedbackDelayEffect',\n  //   node: feedbackDelayNode,\n  //   settings: feedbackDelaySettings\n  // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Freeverb',\n  //   type: 'FreeverbEffect',\n  //   node: freeverbNode,\n  //   settings: freeverbSettings\n  // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Frequency Shift',\n  //   type: 'FrequencyShifterEffect',\n  //   node: frequencyShifterNode,\n  //   settings: frequencyShifterSettings\n  // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'JC Reverb',\n  //   type: 'JCReverbEffect',\n  //   node: jcReverbNode,\n  //   settings: jcReverbSettings\n  // },\n  // // {\n  // //   id: generateUniqId(),\n  // //   name: 'Mid Side Effect',\n  // //   type: 'MidSideEffect',\n  // //   node: midSideNode,\n  // //   settings: midSideSettings\n  // // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Phaser',\n  //   type: 'PhaserEffect',\n  //   node: phaserNode,\n  //   settings: phaserSettings\n  // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Ping Pong Delay',\n  //   type: 'PingPongDelayEffect',\n  //   node: pingPongDelayNode,\n  //   settings: pingPongDelaySettings\n  // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Pitch Shift',\n  //   type: 'PitchShiftEffect',\n  //   node: pitchShiftNode,\n  //   settings: pitchShiftSettings\n  // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Reverb',\n  //   type: 'ReverbEffect',\n  //   node: reverbNode,\n  //   settings: reverbSettings\n  // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Stereo Widener',\n  //   type: 'StereoWidenerEffect',\n  //   node: stereoWidenerNode,\n  //   settings: stereoWidenerSettings\n  // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Tremolo',\n  //   type: 'TremoloEffect',\n  //   node: tremoloNode,\n  //   settings: tremoloSettings\n  // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Vibrato',\n  //   type: 'VibratoEffect',\n  //   node: vibratoNode,\n  //   settings: vibratoSettings\n  // },\n  {\n    id: generateUniqId(),\n    name: 'Channel',\n    type: 'Channel',\n    node: channelNode,\n    settings: channelSettings\n  }\n]\n\n// prettier-ignore nathan taylor 10.7PO sync\nconst v = 1\n\nconst part = new Tone.Part(\n  function (time, note) {\n    synthNode.triggerAttackRelease(\n      note.noteName,\n      note.duration,\n      time,\n      note.velocity\n    )\n  },\n  [\n    {\n      time: '0:0:0',\n      noteName: 'A4#',\n      velocity: 1,\n      duration: '4n'\n    },\n    {\n      time: '0:1:0',\n      noteName: 'C5',\n      velocity: 1,\n      duration: '2n'\n    },\n    {\n      time: '0:3:0',\n      noteName: 'A4#',\n      velocity: 1,\n      duration: '4n'\n    },\n    {\n      time: '1:0:0',\n      noteName: 'D5',\n      velocity: 1,\n      duration: '2n'\n    },\n    {\n      time: '1:3:0',\n      noteName: 'C5',\n      velocity: 1,\n      duration: '4n'\n    },\n    {\n      time: '1:4:0',\n      noteName: 'A4#',\n      velocity: 1,\n      duration: '8n'\n    },\n    {\n      time: '2:0:0',\n      noteName: 'D5',\n      velocity: 1,\n      duration: '2n'\n    },\n    {\n      time: '2:1:0',\n      noteName: 'C5',\n      velocity: 1,\n      duration: '8n'\n    },\n    {\n      time: '2:1:0',\n      noteName: 'C5',\n      velocity: 1,\n      duration: '4n'\n    }\n  ]\n)\n\npart.loopEnd = '8m'\npart.loop = true\n\nexport { instrument, part }\n"]},"metadata":{},"sourceType":"module"}