{"ast":null,"code":"var kick = new Tone.Buffer('samples/00007-Linn-9000-Kick-2.mp3', function () {\n  var buff = kick.get();\n});\nvar snare = new Tone.Buffer('samples/00024-Linn-AdrenaLinn1-SnareDrum_7.mp3', function () {\n  var buff = snare.get();\n});\nvar hat = new Tone.Buffer('samples/00004-Linn-9000-Hhclose2.mp3', function () {\n  var buff = hat.get();\n});\nvar ride = new Tone.Buffer('samples/00031-Tama-RockStar-Ride.mp3', function () {\n  var buff = ride.get();\n});\nimport * as Tone from 'tone';\nimport { generateUniqId } from '../utilities';\nvar samplerSettings = {\n  volume: 1,\n  attack: 0,\n  release: 0,\n  curve: 'linear',\n  urls: {\n    A1: kick,\n    B1: snare,\n    C1: hat,\n    D1: ride\n  },\n  baseUrl: 'http://localhost:3000'\n};\nvar freeverbSettings = {\n  wet: 0.9,\n  roomSize: 0.08,\n  dampening: 40\n};\nvar channelSettings = {\n  volume: -6,\n  pan: 0,\n  mute: false,\n  solo: false\n};\nvar samplerNode = new Tone.Sampler(samplerSettings);\nvar freeverbNode = new Tone.Freeverb(freeverbSettings);\nvar channelNode = new Tone.Channel(channelSettings).toDestination();\nsamplerNode.chain(freeverbNode, channelNode);\nvar v = 1;\nvar partSettings = {\n  scale: ['A1', 'B1', 'C1', 'D1'],\n  sequence: [{\n    time: '0:0:0',\n    noteName: 'A1',\n    duration: '1n',\n    velocity: v\n  }, {\n    time: '0:0:2',\n    noteName: 'C1',\n    duration: '1n',\n    velocity: v\n  }, {\n    time: '0:1:0',\n    noteName: 'A1',\n    duration: '1n',\n    velocity: v\n  }, {\n    time: '0:1:2',\n    noteName: 'C1',\n    duration: '1n',\n    velocity: v\n  }, {\n    time: '0:2:0',\n    noteName: 'A1',\n    duration: '1n',\n    velocity: v\n  }, {\n    time: '0:2:2',\n    noteName: 'C1',\n    duration: '1n',\n    velocity: v\n  }, {\n    time: '0:3:0',\n    noteName: 'A1',\n    duration: '1n',\n    velocity: v\n  }, {\n    time: '0:3:2',\n    noteName: 'C1',\n    duration: '1n',\n    velocity: v\n  }, {\n    time: '1:0:0',\n    noteName: 'A1',\n    duration: '1n',\n    velocity: v\n  }, {\n    time: '1:0:2',\n    noteName: 'C1',\n    duration: '1n',\n    velocity: v\n  }, {\n    time: '1:1:0',\n    noteName: 'A1',\n    duration: '1n',\n    velocity: v\n  }, {\n    time: '1:1:2',\n    noteName: 'C1',\n    duration: '1n',\n    velocity: v\n  }, {\n    time: '1:2:0',\n    noteName: 'A1',\n    duration: '1n',\n    velocity: v\n  }, {\n    time: '1:2:2',\n    noteName: 'C1',\n    duration: '1n',\n    velocity: v\n  }, {\n    time: '1:3:0',\n    noteName: 'A1',\n    duration: '1n',\n    velocity: v\n  }, {\n    time: '1:3:2',\n    noteName: 'C1',\n    duration: '1n',\n    velocity: v\n  }]\n};\nvar partNode = new Tone.Part(function (time, note) {\n  samplerNode.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n}, []);\npartNode.loopEnd = '2m';\npartNode.loop = true;\nvar instrument = [{\n  id: generateUniqId(),\n  name: 'Drum Sampler',\n  type: 'Sampler',\n  node: samplerNode,\n  settings: samplerSettings\n}, {\n  id: generateUniqId(),\n  name: 'Freeverb',\n  type: 'FreeverbEffect',\n  node: freeverbNode,\n  settings: freeverbSettings\n}, {\n  id: generateUniqId(),\n  name: 'Channel',\n  type: 'Channel',\n  node: channelNode,\n  settings: channelSettings\n}];\nexport { instrument };","map":{"version":3,"sources":["/Users/olesyashevchenko/synthExample/app/javascript/tunes/drum_sampler.js"],"names":["kick","Tone","Buffer","buff","get","snare","hat","ride","generateUniqId","samplerSettings","volume","attack","release","curve","urls","A1","B1","C1","D1","baseUrl","freeverbSettings","wet","roomSize","dampening","channelSettings","pan","mute","solo","samplerNode","Sampler","freeverbNode","Freeverb","channelNode","Channel","toDestination","chain","v","partSettings","scale","sequence","time","noteName","duration","velocity","partNode","Part","note","triggerAttackRelease","loopEnd","loop","instrument","id","name","type","node","settings"],"mappings":"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","sourcesContent":["let kick = new Tone.Buffer('samples/00007-Linn-9000-Kick-2.mp3', function () {\n  let buff = kick.get()\n})\n\nlet snare = new Tone.Buffer(\n  'samples/00024-Linn-AdrenaLinn1-SnareDrum_7.mp3',\n  function () {\n    let buff = snare.get()\n  }\n)\n\nlet hat = new Tone.Buffer('samples/00004-Linn-9000-Hhclose2.mp3', function () {\n  let buff = hat.get()\n})\n\nlet ride = new Tone.Buffer('samples/00031-Tama-RockStar-Ride.mp3', function () {\n  let buff = ride.get()\n})\n\nimport * as Tone from 'tone'\nimport { generateUniqId } from '../utilities'\n\nconst samplerSettings = {\n  volume: 1,\n  attack: 0,\n  release: 0,\n  curve: 'linear',\n  urls: {\n    A1: kick,\n    B1: snare,\n    C1: hat,\n    D1: ride\n  },\n  baseUrl: 'http://localhost:3000'\n}\n\nconst freeverbSettings = {\n  wet: 0.9,\n  roomSize: 0.08,\n  dampening: 40\n}\n\nconst channelSettings = {\n  volume: -6,\n  pan: 0,\n  mute: false,\n  solo: false\n}\n\nconst samplerNode = new Tone.Sampler(samplerSettings)\nconst freeverbNode = new Tone.Freeverb(freeverbSettings)\nconst channelNode = new Tone.Channel(channelSettings).toDestination()\nsamplerNode.chain(freeverbNode, channelNode)\n\nconst v = 1\n\nconst partSettings = {\n  scale: ['A1', 'B1', 'C1', 'D1'],\n  sequence: [\n    {\n      time: '0:0:0',\n      noteName: 'A1',\n      duration: '1n',\n      velocity: v\n    },\n    {\n      time: '0:0:2',\n      noteName: 'C1',\n      duration: '1n',\n      velocity: v\n    },\n    {\n      time: '0:1:0',\n      noteName: 'A1',\n      duration: '1n',\n      velocity: v\n    },\n    {\n      time: '0:1:2',\n      noteName: 'C1',\n      duration: '1n',\n      velocity: v\n    },\n    {\n      time: '0:2:0',\n      noteName: 'A1',\n      duration: '1n',\n      velocity: v\n    },\n    {\n      time: '0:2:2',\n      noteName: 'C1',\n      duration: '1n',\n      velocity: v\n    },\n    {\n      time: '0:3:0',\n      noteName: 'A1',\n      duration: '1n',\n      velocity: v\n    },\n    {\n      time: '0:3:2',\n      noteName: 'C1',\n      duration: '1n',\n      velocity: v\n    },\n    {\n      time: '1:0:0',\n      noteName: 'A1',\n      duration: '1n',\n      velocity: v\n    },\n    {\n      time: '1:0:2',\n      noteName: 'C1',\n      duration: '1n',\n      velocity: v\n    },\n    {\n      time: '1:1:0',\n      noteName: 'A1',\n      duration: '1n',\n      velocity: v\n    },\n    {\n      time: '1:1:2',\n      noteName: 'C1',\n      duration: '1n',\n      velocity: v\n    },\n    {\n      time: '1:2:0',\n      noteName: 'A1',\n      duration: '1n',\n      velocity: v\n    },\n    {\n      time: '1:2:2',\n      noteName: 'C1',\n      duration: '1n',\n      velocity: v\n    },\n    {\n      time: '1:3:0',\n      noteName: 'A1',\n      duration: '1n',\n      velocity: v\n    },\n    {\n      time: '1:3:2',\n      noteName: 'C1',\n      duration: '1n',\n      velocity: v\n    }\n  ]\n}\n\nconst partNode = new Tone.Part(function (time, note) {\n  samplerNode.triggerAttackRelease(\n    note.noteName,\n    note.duration,\n    time,\n    note.velocity\n  )\n}, [])\n\npartNode.loopEnd = '2m'\npartNode.loop = true\n\nconst instrument = [\n  {\n    id: generateUniqId(),\n    name: 'Drum Sampler',\n    type: 'Sampler',\n    node: samplerNode,\n    settings: samplerSettings\n  },\n  {\n    id: generateUniqId(),\n    name: 'Freeverb',\n    type: 'FreeverbEffect',\n    node: freeverbNode,\n    settings: freeverbSettings\n  },\n  {\n    id: generateUniqId(),\n    name: 'Channel',\n    type: 'Channel',\n    node: channelNode,\n    settings: channelSettings\n  }\n]\n\nexport { instrument }\n"]},"metadata":{},"sourceType":"module"}