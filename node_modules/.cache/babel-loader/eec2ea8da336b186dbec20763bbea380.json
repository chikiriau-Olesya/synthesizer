{"ast":null,"code":"import * as Tone from 'tone';\nimport { generateUniqId } from '../utilities';\nvar playerSettings = {\n  url: 'https://tonejs.github.io/audio/impulse-responses/chorus-feedback.mp3',\n  mute: true,\n  volume: -2,\n  autostart: true,\n  loop: true\n};\nvar player = new Tone.Player(playerSettings);\nvar pitchShift = new Tone.PitchShift(4).toDestination();\nvar filter = new Tone.Filter('E5').toDestination();\nplayer.chain(pitchShift, filter, Tone.Destination);\nvar instrument = [{\n  id: generateUniqId(),\n  name: 'Chorus Sound',\n  type: 'Player',\n  node: player,\n  settings: playerSettings\n}];\nexport { instrument };","map":{"version":3,"sources":["/Users/olesyashevchenko/synthExample/app/javascript/tunes/chorus_player.js"],"names":["Tone","generateUniqId","playerSettings","url","mute","volume","autostart","loop","player","Player","pitchShift","PitchShift","toDestination","filter","Filter","chain","Destination","instrument","id","name","type","node","settings"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,MAAtB;AACA,SAASC,cAAT,QAA+B,cAA/B;AAEA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,GAAG,EAAE,sEADgB;AAErBC,EAAAA,IAAI,EAAE,IAFe;AAGrBC,EAAAA,MAAM,EAAE,CAAC,CAHY;AAIrBC,EAAAA,SAAS,EAAE,IAJU;AAKrBC,EAAAA,IAAI,EAAE;AALe,CAAvB;AAQA,IAAMC,MAAM,GAAG,IAAIR,IAAI,CAACS,MAAT,CAAgBP,cAAhB,CAAf;AACA,IAAMQ,UAAU,GAAG,IAAIV,IAAI,CAACW,UAAT,CAAoB,CAApB,EAAuBC,aAAvB,EAAnB;AACA,IAAMC,MAAM,GAAG,IAAIb,IAAI,CAACc,MAAT,CAAgB,IAAhB,EAAsBF,aAAtB,EAAf;AACAJ,MAAM,CAACO,KAAP,CAAaL,UAAb,EAAyBG,MAAzB,EAAiCb,IAAI,CAACgB,WAAtC;AAEA,IAAMC,UAAU,GAAG,CACjB;AACEC,EAAAA,EAAE,EAAEjB,cAAc,EADpB;AAEEkB,EAAAA,IAAI,EAAE,cAFR;AAGEC,EAAAA,IAAI,EAAE,QAHR;AAIEC,EAAAA,IAAI,EAAEb,MAJR;AAKEc,EAAAA,QAAQ,EAAEpB;AALZ,CADiB,CAAnB;AAUA,SAASe,UAAT","sourcesContent":["import * as Tone from 'tone'\nimport { generateUniqId } from '../utilities'\n\nconst playerSettings = {\n  url: 'https://tonejs.github.io/audio/impulse-responses/chorus-feedback.mp3',\n  mute: true,\n  volume: -2,\n  autostart: true,\n  loop: true\n}\n\nconst player = new Tone.Player(playerSettings)\nconst pitchShift = new Tone.PitchShift(4).toDestination()\nconst filter = new Tone.Filter('E5').toDestination()\nplayer.chain(pitchShift, filter, Tone.Destination)\n\nconst instrument = [\n  {\n    id: generateUniqId(),\n    name: 'Chorus Sound',\n    type: 'Player',\n    node: player,\n    settings: playerSettings\n  }\n]\n\nexport { instrument }\n"]},"metadata":{},"sourceType":"module"}