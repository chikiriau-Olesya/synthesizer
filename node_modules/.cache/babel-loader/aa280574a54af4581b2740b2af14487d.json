{"ast":null,"code":"var _jsxFileName = \"/Users/olesyashevchenko/synthExample/app/javascript/module_components/ToneSynth.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Slider from '../control_components/Slider';\nimport Knob from '../control_components/Knob';\nimport ButtonSet from '../control_components/ButtonSet';\n\nvar ToneSynth = /*#__PURE__*/function (_Component) {\n  _inherits(ToneSynth, _Component);\n\n  var _super = _createSuper(ToneSynth);\n\n  function ToneSynth(props) {\n    var _this;\n\n    _classCallCheck(this, ToneSynth);\n\n    _this = _super.call(this, props);\n\n    _this.updateNodeParams = function () {\n      var _this$props = _this.props,\n          node = _this$props.node,\n          settings = _this$props.settings;\n      var volume = settings.volume,\n          detune = settings.detune,\n          portamento = settings.portamento,\n          envelope = settings.envelope,\n          oscillator = settings.oscillator;\n      var type = oscillator.type,\n          phase = oscillator.phase,\n          harmonicity = oscillator.harmonicity;\n      var attack = envelope.attack,\n          attackCurve = envelope.attackCurve,\n          decay = envelope.decay,\n          decayCurve = envelope.decayCurve,\n          sustain = envelope.sustain,\n          release = envelope.release,\n          releaseCurve = envelope.releaseCurve;\n      node.volume.value = volume;\n      node.detune.value = detune;\n      node.portamento = portamento;\n      node.oscillator.type = type;\n      node.oscillator.phase = phase;\n\n      if (node.oscillator.harmonicity) {\n        node.oscillator.harmonicity.value = harmonicity;\n      }\n\n      node.envelope.attack = attack;\n      node.envelope.attackCurve = attackCurve;\n      node.envelope.decay = decay;\n      node.envelope.decayCurve = decayCurve;\n      node.envelope.sustain = sustain;\n      node.envelope.release = release;\n      node.envelope.releaseCurve = releaseCurve;\n    };\n\n    _this.handlePropertyValueChange = function (property, value) {\n      var _this$props2 = _this.props,\n          id = _this$props2.id,\n          handlePropertyValueChange = _this$props2.handlePropertyValueChange;\n      handlePropertyValueChange(id, property, value);\n    };\n\n    return _this;\n  }\n\n  _createClass(ToneSynth, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          name = _this$props3.name,\n          settings = _this$props3.settings;\n      var volume = settings.volume,\n          detune = settings.detune,\n          portamento = settings.portamento,\n          envelope = settings.envelope,\n          oscillator = settings.oscillator;\n      var type = oscillator.type,\n          phase = oscillator.phase,\n          harmonicity = oscillator.harmonicity; // Type\n      // The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the oscillator's class are accessible when the oscillator is set to that type, but throws an error when it's not.\n      // type OmniOscillatorType = \"fatsine\" | \"fatsquare\" | \"fatsawtooth\" | \"fattriangle\" | \"fatcustom\" | FatTypeWithPartials | \"fmsine\" | \"fmsquare\" | \"fmsawtooth\" | \"fmtriangle\" | \"fmcustom\" | FMTypeWithPartials | \"amsine\" | \"amsquare\" | \"amsawtooth\" | \"amtriangle\" | \"amcustom\" | AMTypeWithPartials | TypeWithPartials | OscillatorType | \"pulse\" | \"pwm\"\n      // Modulation Type\n      // The type of the modulator oscillator. Only if the oscillator is set to \"am\" or \"fm\" types. See AMOscillator or FMOscillator\n\n      var attack = envelope.attack,\n          attackCurve = envelope.attackCurve,\n          decay = envelope.decay,\n          decayCurve = envelope.decayCurve,\n          sustain = envelope.sustain,\n          release = envelope.release,\n          releaseCurve = envelope.releaseCurve;\n      var oscillatorTypes = ['fatsine', 'fatsquare', 'fatsawtooth', 'fattriangle', 'fmsine', 'fmsquare', 'fmsawtooth', 'fmtriangle', 'amsine', 'amsquare', 'amsawtooth', 'amtriangle', 'pulse', 'pwm', 'smooth'];\n      var envelopeCurves = ['linear', 'exponential', 'sine', 'cosine', 'bounce', 'ripple', 'step'];\n      var decayEnvelopeCurves = ['linear', 'exponential'];\n      this.updateNodeParams();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ToneSynth\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, name), /*#__PURE__*/React.createElement(Slider, {\n        name: \"Volume\",\n        property: ['volume'],\n        min: -20,\n        max: 10,\n        step: 0.01,\n        value: volume,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Knob, {\n        name: \"Detune\",\n        property: ['detune'],\n        min: -100,\n        max: 100,\n        value: detune,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Slider, {\n        name: \"Portamento\",\n        property: ['portamento'],\n        min: 0,\n        max: 1,\n        step: 0.1,\n        value: portamento,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }, \"Oscillator\"), /*#__PURE__*/React.createElement(ButtonSet, {\n        name: \"Type\",\n        property: ['oscillator', 'type'],\n        value: type,\n        options: oscillatorTypes,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Slider, {\n        name: \"Phase\",\n        property: ['oscillator', 'phase'],\n        min: 0,\n        max: 360,\n        step: 1,\n        value: phase,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Slider, {\n        name: \"Harmonicity\",\n        property: ['oscillator', 'harmonicity'],\n        min: 0,\n        max: 7,\n        step: 0.01,\n        value: harmonicity,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }\n      }, \"Envelope\"), /*#__PURE__*/React.createElement(Slider, {\n        name: \"Attack\",\n        property: ['envelope', 'attack'],\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: attack,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ButtonSet, {\n        name: \"Attack Curve\",\n        property: ['envelope', 'attackCurve'],\n        value: attackCurve,\n        options: envelopeCurves,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Slider, {\n        name: \"Decay\",\n        property: ['envelope', 'decay'],\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: decay,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ButtonSet, {\n        name: \"Decay Curve\",\n        property: ['envelope', 'decayCurve'],\n        value: decayCurve,\n        options: decayEnvelopeCurves,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Slider, {\n        name: \"Sustain\",\n        property: ['envelope', 'sustain'],\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: sustain,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Slider, {\n        name: \"Release\",\n        property: ['envelope', 'release'],\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: release,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ButtonSet, {\n        name: \"Release Curve\",\n        property: ['envelope', 'releaseCurve'],\n        value: releaseCurve,\n        options: envelopeCurves,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return ToneSynth;\n}(Component);\n\nexport { ToneSynth as default };\nToneSynth.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  node: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired,\n  handlePropertyValueChange: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/olesyashevchenko/synthExample/app/javascript/module_components/ToneSynth.jsx"],"names":["PropTypes","React","Component","Slider","Knob","ButtonSet","ToneSynth","props","updateNodeParams","node","settings","volume","detune","portamento","envelope","oscillator","type","phase","harmonicity","attack","attackCurve","decay","decayCurve","sustain","release","releaseCurve","value","handlePropertyValueChange","property","id","name","oscillatorTypes","envelopeCurves","decayEnvelopeCurves","propTypes","number","isRequired","string","object","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nimport Slider from '../control_components/Slider'\nimport Knob from '../control_components/Knob'\nimport ButtonSet from '../control_components/ButtonSet'\n\nexport default class ToneSynth extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  updateNodeParams = () => {\n    const { node, settings } = this.props\n    const { volume, detune, portamento, envelope, oscillator } = settings\n    const { type, phase, harmonicity } = oscillator\n\n    const {\n      attack,\n      attackCurve,\n      decay,\n      decayCurve,\n      sustain,\n      release,\n      releaseCurve\n    } = envelope\n\n    node.volume.value = volume\n    node.detune.value = detune\n    node.portamento = portamento\n\n    node.oscillator.type = type\n    node.oscillator.phase = phase\n\n    if (node.oscillator.harmonicity) {\n      node.oscillator.harmonicity.value = harmonicity\n    }\n\n    node.envelope.attack = attack\n    node.envelope.attackCurve = attackCurve\n    node.envelope.decay = decay\n    node.envelope.decayCurve = decayCurve\n    node.envelope.sustain = sustain\n    node.envelope.release = release\n    node.envelope.releaseCurve = releaseCurve\n  }\n\n  handlePropertyValueChange = (property, value) => {\n    const { id, handlePropertyValueChange } = this.props\n    handlePropertyValueChange(id, property, value)\n  }\n\n  render() {\n    const { name, settings } = this.props\n    const { volume, detune, portamento, envelope, oscillator } = settings\n\n    const {\n      type,\n      // modulationType,\n      // partialCount,\n      // partials,\n      phase,\n      harmonicity\n    } = oscillator\n\n    // Type\n    // The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the oscillator's class are accessible when the oscillator is set to that type, but throws an error when it's not.\n    // type OmniOscillatorType = \"fatsine\" | \"fatsquare\" | \"fatsawtooth\" | \"fattriangle\" | \"fatcustom\" | FatTypeWithPartials | \"fmsine\" | \"fmsquare\" | \"fmsawtooth\" | \"fmtriangle\" | \"fmcustom\" | FMTypeWithPartials | \"amsine\" | \"amsquare\" | \"amsawtooth\" | \"amtriangle\" | \"amcustom\" | AMTypeWithPartials | TypeWithPartials | OscillatorType | \"pulse\" | \"pwm\"\n\n    // Modulation Type\n    // The type of the modulator oscillator. Only if the oscillator is set to \"am\" or \"fm\" types. See AMOscillator or FMOscillator\n\n    const {\n      attack,\n      attackCurve,\n      decay,\n      decayCurve,\n      sustain,\n      release,\n      releaseCurve\n    } = envelope\n\n    const oscillatorTypes = [\n      'fatsine',\n      'fatsquare',\n      'fatsawtooth',\n      'fattriangle',\n      'fmsine',\n      'fmsquare',\n      'fmsawtooth',\n      'fmtriangle',\n      'amsine',\n      'amsquare',\n      'amsawtooth',\n      'amtriangle',\n      'pulse',\n      'pwm',\n      'smooth'\n    ]\n\n    const envelopeCurves = [\n      'linear',\n      'exponential',\n      'sine',\n      'cosine',\n      'bounce',\n      'ripple',\n      'step'\n    ]\n\n    const decayEnvelopeCurves = ['linear', 'exponential']\n\n    this.updateNodeParams()\n\n    return (\n      <div className=\"ToneSynth\">\n        <h1>{name}</h1>\n\n        <Slider\n          name=\"Volume\"\n          property={['volume']}\n          min={-20}\n          max={10}\n          step={0.01}\n          value={volume}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <Knob\n          name=\"Detune\"\n          property={['detune']}\n          min={-100}\n          max={100}\n          value={detune}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <Slider\n          name=\"Portamento\"\n          property={['portamento']}\n          min={0}\n          max={1}\n          step={0.1}\n          value={portamento}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <h2>Oscillator</h2>\n\n        <ButtonSet\n          name=\"Type\"\n          property={['oscillator', 'type']}\n          value={type}\n          options={oscillatorTypes}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <Slider\n          name=\"Phase\"\n          property={['oscillator', 'phase']}\n          min={0}\n          max={360}\n          step={1}\n          value={phase}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <Slider\n          name=\"Harmonicity\"\n          property={['oscillator', 'harmonicity']}\n          min={0}\n          max={7}\n          step={0.01}\n          value={harmonicity}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <h2>Envelope</h2>\n\n        <Slider\n          name=\"Attack\"\n          property={['envelope', 'attack']}\n          min={0}\n          max={1}\n          step={0.01}\n          value={attack}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <ButtonSet\n          name=\"Attack Curve\"\n          property={['envelope', 'attackCurve']}\n          value={attackCurve}\n          options={envelopeCurves}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <Slider\n          name=\"Decay\"\n          property={['envelope', 'decay']}\n          min={0}\n          max={1}\n          step={0.01}\n          value={decay}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <ButtonSet\n          name=\"Decay Curve\"\n          property={['envelope', 'decayCurve']}\n          value={decayCurve}\n          options={decayEnvelopeCurves}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <Slider\n          name=\"Sustain\"\n          property={['envelope', 'sustain']}\n          min={0}\n          max={1}\n          step={0.01}\n          value={sustain}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <Slider\n          name=\"Release\"\n          property={['envelope', 'release']}\n          min={0}\n          max={1}\n          step={0.01}\n          value={release}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <ButtonSet\n          name=\"Release Curve\"\n          property={['envelope', 'releaseCurve']}\n          value={releaseCurve}\n          options={envelopeCurves}\n          handleChange={this.handlePropertyValueChange}\n        />\n      </div>\n    )\n  }\n}\n\nToneSynth.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  node: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired,\n  handlePropertyValueChange: PropTypes.func.isRequired\n}\n"]},"metadata":{},"sourceType":"module"}