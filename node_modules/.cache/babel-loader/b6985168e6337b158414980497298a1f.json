{"ast":null,"code":"var _jsxFileName = \"/Users/olesyashevchenko/synthExample/app/javascript/control_components/Color.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React, { PureComponent } from 'react';\n\nvar Color = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Color, _PureComponent);\n\n  var _super = _createSuper(Color);\n\n  function Color(props) {\n    var _this;\n\n    _classCallCheck(this, Color);\n\n    _this = _super.call(this, props);\n    _this.div = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n\n  _createClass(Color, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          node = _this$props.node,\n          settings = _this$props.settings;\n      var volume = settings.volume,\n          oscillator = settings.oscillator;\n      node.volume.value = volume;\n      var a = value + 90;\n      var b = value + 120;\n      var c = value + 100;\n      var divStyle = {\n        backgroundColor: \"(\".concat(a, \",\").concat(b, \",\").concat(c, \")\"),\n        width: \"100px\",\n        height: \"100px\"\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Color\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, name), /*#__PURE__*/React.createElement(\"div\", {\n        style: divStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, \" \"));\n    }\n  }]);\n\n  return Color;\n}(PureComponent);\n\nexport { Color as default };","map":{"version":3,"sources":["/Users/olesyashevchenko/synthExample/app/javascript/control_components/Color.jsx"],"names":["React","PureComponent","Color","props","div","createRef","node","settings","volume","oscillator","value","a","b","c","divStyle","backgroundColor","width","height","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;IAEqBC,K;;;;;AACnB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,GAAL,gBAAWJ,KAAK,CAACK,SAAN,EAAX;AAFiB;AAGlB;;;;WAED,kBAAS;AACP,wBAA2B,KAAKF,KAAhC;AAAA,UAAQG,IAAR,eAAQA,IAAR;AAAA,UAAcC,QAAd,eAAcA,QAAd;AACA,UAAQC,MAAR,GAA+BD,QAA/B,CAAQC,MAAR;AAAA,UAAgBC,UAAhB,GAA+BF,QAA/B,CAAgBE,UAAhB;AAEAH,MAAAA,IAAI,CAACE,MAAL,CAAYE,KAAZ,GAAoBF,MAApB;AAEA,UAAIG,CAAC,GAAGD,KAAK,GAAG,EAAhB;AACA,UAAIE,CAAC,GAAGF,KAAK,GAAG,GAAhB;AACA,UAAIG,CAAC,GAAGH,KAAK,GAAG,GAAhB;AAEA,UAAII,QAAQ,GAAG;AACbC,QAAAA,eAAe,aAAMJ,CAAN,cAAWC,CAAX,cAAgBC,CAAhB,MADF;AAEbG,QAAAA,KAAK,SAFQ;AAGbC,QAAAA,MAAM;AAHO,OAAf;AAMA,0BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,IAAL,CADF,eAEE;AAAK,QAAA,KAAK,EAAEJ,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF;AAMD;;;;EA5BgCb,a;;SAAdC,K","sourcesContent":["import React, { PureComponent } from 'react'\n\nexport default class Color extends PureComponent {\n  constructor(props) {\n    super(props)\n    this.div = React.createRef()\n  }\n\n  render() {\n    const { node, settings } = this.props\n    const { volume, oscillator } = settings\n\n    node.volume.value = volume\n\n    let a = value + 90\n    let b = value + 120\n    let c = value + 100\n\n    let divStyle = {\n      backgroundColor: `(${a},${b},${c})`,\n      width: `100px`,\n      height: `100px`\n    }\n\n    return (\n      <div className=\"Color\">\n        <h3>{name}</h3>\n        <div style={divStyle}> </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}