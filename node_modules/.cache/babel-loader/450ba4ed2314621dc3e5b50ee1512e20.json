{"ast":null,"code":"var _jsxFileName = \"/Users/olesyashevchenko/synthExample/app/javascript/containers/SynthContainer.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport * as Tone from 'tone';\nimport React, { PureComponent } from 'react';\nimport WelcomeScreen from '../views/WelcomeScreen';\nimport SynthRoom from '../views/SynthRoom';\n\nvar SynthContainer = /*#__PURE__*/function (_PureComponent) {\n  _inherits(SynthContainer, _PureComponent);\n\n  var _super = _createSuper(SynthContainer);\n\n  function SynthContainer(props) {\n    var _this;\n\n    _classCallCheck(this, SynthContainer);\n\n    _this = _super.call(this, props);\n    _this.startWebAudio = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Tone.start();\n\n            case 2:\n              _this.initInstruments();\n\n              _this.setState({\n                webAudioStarted: true\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.generateUniqId = function () {\n      return Math.floor(Math.random() * Date.now());\n    };\n\n    _this.initInstruments = function () {\n      var melodySynthSettings = {\n        volume: 0.8,\n        detune: 0,\n        portamento: 0.05,\n        envelope: {\n          attack: 0.05,\n          attackCurve: 'exponential',\n          decay: 0.2,\n          decayCurve: 'exponential',\n          sustain: 0.2,\n          release: 1.5,\n          releaseCurve: 'exponential'\n        },\n        oscillator: {\n          type: 'amtriangle',\n          modulationType: 'sine',\n          // partialCount: 0,\n          // partials: [],\n          phase: 0,\n          harmonicity: 0.5\n        }\n      };\n      var melodySynthChorusSettings = {\n        wet: 0,\n        type: 'sine',\n        frequency: 1.5,\n        delayTime: 3.5,\n        depth: 0.7,\n        spread: 180\n      };\n      var melodySynthFreeverbSettings = {\n        wet: 0,\n        roomSize: 0.7,\n        dampening: 1000\n      };\n      var melodySynthPingPongDelaySettings = {\n        wet: 0,\n        delayTime: 0.25,\n        maxDelayTime: 1\n      };\n      var melodySynthTremoloSettings = {\n        wet: 0,\n        frequency: 10,\n        type: 'sine',\n        depth: 0.5,\n        spread: 180\n      };\n      var melodySynthVibratoSettings = {\n        wet: 0,\n        maxDelay: 0.005,\n        frequency: 5,\n        depth: 0.1,\n        type: 'sine'\n      };\n      var melodySynthChannelSettings = {\n        pan: 0,\n        volume: 0,\n        mute: false,\n        solo: false\n      };\n      var melodySynthNode = new Tone.Synth(melodySynthSettings);\n      var melodySynthChorusNode = new Tone.Chorus(melodySynthChorusSettings).start();\n      var melodySynthFreeverbNode = new Tone.Freeverb(melodySynthFreeverbSettings);\n      var melodySynthPingPongDelayNode = new Tone.PingPongDelay(melodySynthPingPongDelaySettings);\n      var melodySynthTremoloNode = new Tone.Tremolo(melodySynthTremoloSettings);\n      var melodySynthVibratoNode = new Tone.Vibrato(melodySynthVibratoSettings);\n      var melodySynthChannelNode = new Tone.Channel(melodySynthChannelSettings).toDestination();\n      melodySynthNode.chain(melodySynthChorusNode, melodySynthFreeverbNode, melodySynthPingPongDelayNode, melodySynthTremoloNode, melodySynthVibratoNode, melodySynthChannelNode);\n      var instruments = [{\n        id: _this.generateUniqId(),\n        name: 'Melody Synth',\n        type: 'ToneSynth',\n        node: melodySynthNode,\n        settings: melodySynthSettings\n      }, {\n        id: _this.generateUniqId(),\n        name: 'Chorus',\n        type: 'Chorus',\n        node: melodySynthChorusNode,\n        settings: melodySynthChorusSettings\n      }, {\n        id: _this.generateUniqId(),\n        name: 'Freeverb',\n        type: 'Freeverb',\n        node: melodySynthFreeverbNode,\n        settings: melodySynthFreeverbSettings\n      }, {\n        id: _this.generateUniqId(),\n        name: 'Ping Pong Delay',\n        type: 'PingPongDelay',\n        node: melodySynthPingPongDelayNode,\n        settings: melodySynthPingPongDelaySettings\n      }, {\n        id: _this.generateUniqId(),\n        name: 'Tremolo',\n        type: 'Tremolo',\n        node: melodySynthTremoloNode,\n        settings: melodySynthTremoloSettings\n      }, {\n        id: _this.generateUniqId(),\n        name: 'Vibrato',\n        type: 'Vibrato',\n        node: melodySynthVibratoNode,\n        settings: melodySynthVibratoSettings\n      }, {\n        id: _this.generateUniqId(),\n        name: 'Channel',\n        type: 'Channel',\n        node: melodySynthChannelNode,\n        settings: melodySynthChannelSettings\n      }]; // prettier-ignore\n\n      var seq = new Tone.Sequence(function (time, note) {\n        melodySynthNode.triggerAttackRelease(note, 0.8, time);\n      }, ['C4', 'E4', 'G4', 'C4', 'E4', 'G4', 'C4', 'E4', 'G4', 'C4', 'E4', 'G4', 'E4', 'G4', 'B3', 'E4', 'G4', 'B3', 'E4', 'G4', 'B3', 'E4', 'G4', 'B3']).start(0);\n      Tone.Transport.start();\n\n      _this.setState({\n        instruments: instruments\n      });\n    };\n\n    _this.handlePropertyValueChange = function (id, property, value) {\n      console.log(property, value); // Звук лагает при изменении параметров\n      // const { instruments } = this.state\n      //\n      // instruments.forEach((instrument, i) => {\n      //   if (instrument.id === id) {\n      //     const propertyLevel1 = property[0]\n      //     instrument.settings[propertyLevel1] = value\n      //   }\n      //\n      //   instruments.push(instrument)\n      // })\n      // Иммутабельный способ, звук не лагает\n\n      var instruments = [];\n\n      _this.state.instruments.forEach(function (instrument, i) {\n        var newInstrument = Object.assign({}, instrument);\n\n        if (instrument.id === id) {\n          if (property.length === 1) {\n            var propertyName = property[0];\n            newInstrument.settings[propertyName] = value;\n          } else if (property.length === 2) {\n            var scopeName = property[0];\n            var _propertyName = property[1];\n            newInstrument.settings[scopeName][_propertyName] = value;\n          }\n        }\n\n        instruments.push(newInstrument);\n      });\n\n      _this.setState({\n        instruments: instruments\n      });\n    };\n\n    _this.renderWelcomeScreen = function () {\n      return /*#__PURE__*/React.createElement(WelcomeScreen, {\n        handleStartWebAudio: _this.startWebAudio,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 12\n        }\n      });\n    };\n\n    _this.renderSynthRoom = function () {\n      var instruments = _this.state.instruments;\n      return /*#__PURE__*/React.createElement(SynthRoom, {\n        instruments: instruments,\n        handlePropertyValueChange: _this.handlePropertyValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.state = {\n      webAudioStarted: false,\n      instruments: []\n    };\n    return _this;\n  }\n\n  _createClass(SynthContainer, [{\n    key: \"render\",\n    value: function render() {\n      var webAudioStarted = this.state.webAudioStarted;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"SynthContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 7\n        }\n      }, webAudioStarted === true ? this.renderSynthRoom() : this.renderWelcomeScreen());\n    }\n  }]);\n\n  return SynthContainer;\n}(PureComponent);\n\nexport { SynthContainer as default };","map":{"version":3,"sources":["/Users/olesyashevchenko/synthExample/app/javascript/containers/SynthContainer.jsx"],"names":["Tone","React","PureComponent","WelcomeScreen","SynthRoom","SynthContainer","props","startWebAudio","start","initInstruments","setState","webAudioStarted","generateUniqId","Math","floor","random","Date","now","melodySynthSettings","volume","detune","portamento","envelope","attack","attackCurve","decay","decayCurve","sustain","release","releaseCurve","oscillator","type","modulationType","phase","harmonicity","melodySynthChorusSettings","wet","frequency","delayTime","depth","spread","melodySynthFreeverbSettings","roomSize","dampening","melodySynthPingPongDelaySettings","maxDelayTime","melodySynthTremoloSettings","melodySynthVibratoSettings","maxDelay","melodySynthChannelSettings","pan","mute","solo","melodySynthNode","Synth","melodySynthChorusNode","Chorus","melodySynthFreeverbNode","Freeverb","melodySynthPingPongDelayNode","PingPongDelay","melodySynthTremoloNode","Tremolo","melodySynthVibratoNode","Vibrato","melodySynthChannelNode","Channel","toDestination","chain","instruments","id","name","node","settings","seq","Sequence","time","note","triggerAttackRelease","Transport","handlePropertyValueChange","property","value","console","log","state","forEach","instrument","i","newInstrument","Object","assign","length","propertyName","scopeName","push","renderWelcomeScreen","renderSynthRoom"],"mappings":"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","sourcesContent":["import * as Tone from 'tone'\nimport React, { PureComponent } from 'react'\n\nimport WelcomeScreen from '../views/WelcomeScreen'\nimport SynthRoom from '../views/SynthRoom'\n\nexport default class SynthContainer extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      webAudioStarted: false,\n      instruments: []\n    }\n  }\n\n  startWebAudio = async () => {\n    await Tone.start()\n    this.initInstruments()\n\n    this.setState({\n      webAudioStarted: true\n    })\n  }\n\n  generateUniqId = () => {\n    return Math.floor(Math.random() * Date.now())\n  }\n\n  initInstruments = () => {\n    const melodySynthSettings = {\n      volume: 0.8,\n      detune: 0,\n      portamento: 0.05,\n      envelope: {\n        attack: 0.05,\n        attackCurve: 'exponential',\n        decay: 0.2,\n        decayCurve: 'exponential',\n        sustain: 0.2,\n        release: 1.5,\n        releaseCurve: 'exponential'\n      },\n      oscillator: {\n        type: 'amtriangle',\n        modulationType: 'sine',\n        // partialCount: 0,\n        // partials: [],\n        phase: 0,\n        harmonicity: 0.5\n      }\n    }\n\n    const melodySynthChorusSettings = {\n      wet: 0,\n      type: 'sine',\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      spread: 180\n    }\n\n    const melodySynthFreeverbSettings = {\n      wet: 0,\n      roomSize: 0.7,\n      dampening: 1000\n    }\n\n    const melodySynthPingPongDelaySettings = {\n      wet: 0,\n      delayTime: 0.25,\n      maxDelayTime: 1\n    }\n\n    const melodySynthTremoloSettings = {\n      wet: 0,\n      frequency: 10,\n      type: 'sine',\n      depth: 0.5,\n      spread: 180\n    }\n\n    const melodySynthVibratoSettings = {\n      wet: 0,\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    }\n\n    const melodySynthChannelSettings = {\n      pan: 0,\n      volume: 0,\n      mute: false,\n      solo: false\n    }\n\n    const melodySynthNode = new Tone.Synth(melodySynthSettings)\n\n    const melodySynthChorusNode = new Tone.Chorus(\n      melodySynthChorusSettings\n    ).start()\n\n    const melodySynthFreeverbNode = new Tone.Freeverb(\n      melodySynthFreeverbSettings\n    )\n\n    const melodySynthPingPongDelayNode = new Tone.PingPongDelay(\n      melodySynthPingPongDelaySettings\n    )\n\n    const melodySynthTremoloNode = new Tone.Tremolo(melodySynthTremoloSettings)\n    const melodySynthVibratoNode = new Tone.Vibrato(melodySynthVibratoSettings)\n\n    const melodySynthChannelNode = new Tone.Channel(\n      melodySynthChannelSettings\n    ).toDestination()\n\n    melodySynthNode.chain(\n      melodySynthChorusNode,\n      melodySynthFreeverbNode,\n      melodySynthPingPongDelayNode,\n      melodySynthTremoloNode,\n      melodySynthVibratoNode,\n      melodySynthChannelNode\n    )\n\n    const instruments = [\n      {\n        id: this.generateUniqId(),\n        name: 'Melody Synth',\n        type: 'ToneSynth',\n        node: melodySynthNode,\n        settings: melodySynthSettings\n      },\n      {\n        id: this.generateUniqId(),\n        name: 'Chorus',\n        type: 'Chorus',\n        node: melodySynthChorusNode,\n        settings: melodySynthChorusSettings\n      },\n      {\n        id: this.generateUniqId(),\n        name: 'Freeverb',\n        type: 'Freeverb',\n        node: melodySynthFreeverbNode,\n        settings: melodySynthFreeverbSettings\n      },\n      {\n        id: this.generateUniqId(),\n        name: 'Ping Pong Delay',\n        type: 'PingPongDelay',\n        node: melodySynthPingPongDelayNode,\n        settings: melodySynthPingPongDelaySettings\n      },\n      {\n        id: this.generateUniqId(),\n        name: 'Tremolo',\n        type: 'Tremolo',\n        node: melodySynthTremoloNode,\n        settings: melodySynthTremoloSettings\n      },\n      {\n        id: this.generateUniqId(),\n        name: 'Vibrato',\n        type: 'Vibrato',\n        node: melodySynthVibratoNode,\n        settings: melodySynthVibratoSettings\n      },\n      {\n        id: this.generateUniqId(),\n        name: 'Channel',\n        type: 'Channel',\n        node: melodySynthChannelNode,\n        settings: melodySynthChannelSettings\n      }\n    ]\n\n    // prettier-ignore\n    const seq = new Tone.Sequence(\n      (time, note) => {\n        melodySynthNode.triggerAttackRelease(note, 0.8, time)\n      },\n      [\n        'C4', 'E4', 'G4', 'C4', 'E4', 'G4', 'C4', 'E4', 'G4', 'C4', 'E4', 'G4',\n        'E4', 'G4', 'B3', 'E4', 'G4', 'B3', 'E4', 'G4', 'B3', 'E4', 'G4', 'B3'\n      ]\n    ).start(0)\n\n    Tone.Transport.start()\n\n    this.setState({\n      instruments\n    })\n  }\n\n  handlePropertyValueChange = (id, property, value) => {\n    console.log(property, value)\n    // Звук лагает при изменении параметров\n    // const { instruments } = this.state\n    //\n    // instruments.forEach((instrument, i) => {\n    //   if (instrument.id === id) {\n    //     const propertyLevel1 = property[0]\n    //     instrument.settings[propertyLevel1] = value\n    //   }\n    //\n    //   instruments.push(instrument)\n    // })\n\n    // Иммутабельный способ, звук не лагает\n    const instruments = []\n\n    this.state.instruments.forEach((instrument, i) => {\n      const newInstrument = Object.assign({}, instrument)\n\n      if (instrument.id === id) {\n        if (property.length === 1) {\n          const propertyName = property[0]\n          newInstrument.settings[propertyName] = value\n        } else if (property.length === 2) {\n          const scopeName = property[0]\n          const propertyName = property[1]\n          newInstrument.settings[scopeName][propertyName] = value\n        }\n      }\n\n      instruments.push(newInstrument)\n    })\n\n    this.setState({\n      instruments\n    })\n  }\n\n  renderWelcomeScreen = () => {\n    return <WelcomeScreen handleStartWebAudio={this.startWebAudio} />\n  }\n\n  renderSynthRoom = () => {\n    const { instruments } = this.state\n\n    return (\n      <SynthRoom\n        instruments={instruments}\n        handlePropertyValueChange={this.handlePropertyValueChange}\n      />\n    )\n  }\n\n  render() {\n    const { webAudioStarted } = this.state\n\n    return (\n      <div className=\"SynthContainer\">\n        {webAudioStarted === true\n          ? this.renderSynthRoom()\n          : this.renderWelcomeScreen()}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}