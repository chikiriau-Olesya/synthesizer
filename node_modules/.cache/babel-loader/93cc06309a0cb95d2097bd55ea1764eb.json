{"ast":null,"code":"import * as Tone from 'tone';\nimport { generateUniqId } from '../utilities';\nvar synthSettings = {\n  volume: 0,\n  detune: 0,\n  portamento: 0,\n  envelope: {\n    attack: 0.14,\n    attackCurve: 'step',\n    decay: 2,\n    decayCurve: 'exponential',\n    sustain: 0.65,\n    release: 0.5,\n    releaseCurve: 'bounce'\n  },\n  oscillator: {\n    type: 'fatsine',\n    modulationType: 'fatsine',\n    // partialCount: 0,\n    // partials: [],\n    phase: 0,\n    harmonicity: 0\n  }\n}; // const autoFilterSettings = {\n//   wet: 0,\n//   type: 'sine',\n//   frequency: 1,\n//   depth: 1,\n//   baseFrequency: 200,\n//   octaves: 2.6,\n//   filter: {\n//     type: 'lowpass',\n//     frequency: 100,\n//     rolloff: -12,\n//     Q: 1\n//   }\n// }\n\nvar autoPannerSettings = {\n  wet: 0,\n  type: 'sine18',\n  frequency: 40,\n  depth: 1\n}; // const autoWahSettings = {\n//   wet: 0,\n//   baseFrequency: 100,\n//   octaves: 6,\n//   sensitivity: 0,\n//   Q: 2,\n//   gain: 2,\n//   follower: 0.1\n// }\n// const bitCrusherSettings = {\n//   wet: 0,\n//   bits: 4\n// }\n// const chebyshevSettings = {\n//   wet: 0,\n//   order: 50,\n//   oversample: 'none'\n// }\n//\n// const chorusSettings = {\n//   wet: 0,\n//   type: 'sine',\n//   frequency: 1.5,\n//   delayTime: 3.5,\n//   depth: 0.7,\n//   spread: 180\n// }\n\nvar distortionSettings = {\n  wet: 0.17,\n  distortion: 0.54,\n  oversample: 'none'\n};\nvar feedbackDelaySettings = {\n  wet: 0,\n  delayTime: 0.8,\n  maxDelay: 0.8\n};\nvar freeverbSettings = {\n  wet: 0.9,\n  roomSize: 0.08,\n  dampening: 40\n};\nvar frequencyShifterSettings = {\n  wet: 0,\n  frequency: 42\n};\nvar jcReverbSettings = {\n  wet: 0,\n  roomSize: 0.5\n}; // const midSideSettings = {\n//   wet: 0\n// }\n\nvar phaserSettings = {\n  wet: 0,\n  frequency: 0.5,\n  octaves: 3,\n  stages: 10,\n  Q: 10,\n  baseFrequency: 350\n};\nvar pingPongDelaySettings = {\n  wet: 0,\n  delayTime: 0.25,\n  maxDelayTime: 1\n};\nvar pitchShiftSettings = {\n  wet: 0.75,\n  pitch: 0,\n  windowSize: 0.1,\n  delayTime: 0,\n  feedback: 0.315\n};\nvar reverbSettings = {\n  wet: 0.5,\n  decay: 7.15,\n  preDelay: 0.01\n};\nvar stereoWidenerSettings = {\n  wet: 0,\n  width: 0.5\n};\nvar tremoloSettings = {\n  wet: 0,\n  frequency: 10,\n  type: 'sine',\n  depth: 0.5,\n  spread: 180\n};\nvar vibratoSettings = {\n  wet: 0,\n  maxDelay: 0.005,\n  frequency: 5,\n  depth: 0.1,\n  type: 'sine'\n};\nvar channelSettings = {\n  volume: -6,\n  pan: 0,\n  mute: false,\n  solo: false\n};\nvar synthNode = new Tone.Synth(synthSettings); // const autoFilterNode = new Tone.AutoFilter(autoFilterSettings).start()\n\nvar autoPannerNode = new Tone.AutoPanner(autoPannerSettings).start(); // const autoWahNode = new Tone.AutoWah(autoWahSettings)\n// // const bitCrusherNode = new Tone.BitCrusher(bitCrusherSettings)\n// const chebyshevNode = new Tone.Chebyshev(chebyshevSettings)\n// const chorusNode = new Tone.Chorus(chorusSettings)\n\nvar distortionNode = new Tone.Distortion(distortionSettings); // const feedbackDelayNode = new Tone.FeedbackDelay(feedbackDelaySettings)\n// const freeverbNode = new Tone.Freeverb(freeverbSettings)\n// const frequencyShifterNode = new Tone.FrequencyShifter(frequencyShifterSettings)\n// const jcReverbNode = new Tone.JCReverb(jcReverbSettings)\n// // const midSideNode = new Tone.MidSideEffect(midSideSettings)\n// const phaserNode = new Tone.Phaser(phaserSettings)\n\nvar pingPongDelayNode = new Tone.PingPongDelay(pingPongDelaySettings); // const pitchShiftNode = new Tone.PitchShift(pitchShiftSettings)\n\nvar reverbNode = new Tone.Reverb(reverbSettings); // const stereoWidenerNode = new Tone.StereoWidener(stereoWidenerSettings)\n// const tremoloNode = new Tone.Tremolo(tremoloSettings)\n// const vibratoNode = new Tone.Vibrato(vibratoSettings)\n\nvar channelNode = new Tone.Channel(channelSettings).toDestination();\nsynthNode.chain( // autoFilterNode,\nautoPannerNode, // autoWahNode,\n// // bitCrusherNode,\n// chebyshevNode,\n// chorusNode,\ndistortionNode, // feedbackDelayNode,\n// freeverbNode,\n// frequencyShifterNode,\n// jcReverbNode,\n// // midSideNode,\n// phaserNode,\npingPongDelayNode, // pitchShiftNode,\nreverbNode, // stereoWidenerNode,\n// tremoloNode,\n// vibratoNode,\nchannelNode);\nvar instrument = [{\n  id: generateUniqId(),\n  name: 'All effect Synth',\n  type: 'ToneSynth',\n  node: synthNode,\n  settings: synthSettings\n}, // {\n//   id: generateUniqId(),\n//   name: 'Auto Filter',\n//   type: 'AutoFilterEffect',\n//   node: autoFilterNode,\n//   settings: autoFilterSettings\n// },\n{\n  id: generateUniqId(),\n  name: 'Auto Panner',\n  type: 'AutoPannerEffect',\n  node: autoPannerNode,\n  settings: autoPannerSettings\n}, // {\n//   id: generateUniqId(),\n//   name: 'Auto Wah',\n//   type: 'AutoWahEffect',\n//   node: autoWahNode,\n//   settings: autoWahSettings\n// },\n// // {\n// //   id: generateUniqId(),\n// //   name: 'Bit Crusher',\n// //   type: 'BitCrusherEffect',\n// //   node: bitCrusherNode,\n// //   settings: bitCrusherSettings\n// // },\n// {\n//   id: generateUniqId(),\n//   name: 'Chebyshev',\n//   type: 'ChebyshevEffect',\n//   node: chebyshevNode,\n//   settings: chebyshevSettings\n// },\n// {\n//   id: generateUniqId(),\n//   name: 'Chorus',\n//   type: 'ChorusEffect',\n//   node: chorusNode,\n//   settings: chorusSettings\n// },\n{\n  id: generateUniqId(),\n  name: 'Distortion',\n  type: 'DistortionEffect',\n  node: distortionNode,\n  settings: distortionSettings\n}, // {\n//   id: generateUniqId(),\n//   name: 'Feedback Delay',\n//   type: 'FeedbackDelayEffect',\n//   node: feedbackDelayNode,\n//   settings: feedbackDelaySettings\n// },\n// {\n//   id: generateUniqId(),\n//   name: 'Freeverb',\n//   type: 'FreeverbEffect',\n//   node: freeverbNode,\n//   settings: freeverbSettings\n// },\n// {\n//   id: generateUniqId(),\n//   name: 'Frequency Shift',\n//   type: 'FrequencyShifterEffect',\n//   node: frequencyShifterNode,\n//   settings: frequencyShifterSettings\n// },\n// {\n//   id: generateUniqId(),\n//   name: 'JC Reverb',\n//   type: 'JCReverbEffect',\n//   node: jcReverbNode,\n//   settings: jcReverbSettings\n// },\n// // {\n// //   id: generateUniqId(),\n// //   name: 'Mid Side Effect',\n// //   type: 'MidSideEffect',\n// //   node: midSideNode,\n// //   settings: midSideSettings\n// // },\n// {\n//   id: generateUniqId(),\n//   name: 'Phaser',\n//   type: 'PhaserEffect',\n//   node: phaserNode,\n//   settings: phaserSettings\n// },\n{\n  id: generateUniqId(),\n  name: 'Ping Pong Delay',\n  type: 'PingPongDelayEffect',\n  node: pingPongDelayNode,\n  settings: pingPongDelaySettings\n}, // {\n//   id: generateUniqId(),\n//   name: 'Pitch Shift',\n//   type: 'PitchShiftEffect',\n//   node: pitchShiftNode,\n//   settings: pitchShiftSettings\n// },\n{\n  id: generateUniqId(),\n  name: 'Reverb',\n  type: 'ReverbEffect',\n  node: reverbNode,\n  settings: reverbSettings\n}, // {\n//   id: generateUniqId(),\n//   name: 'Stereo Widener',\n//   type: 'StereoWidenerEffect',\n//   node: stereoWidenerNode,\n//   settings: stereoWidenerSettings\n// },\n// {\n//   id: generateUniqId(),\n//   name: 'Tremolo',\n//   type: 'TremoloEffect',\n//   node: tremoloNode,\n//   settings: tremoloSettings\n// },\n// {\n//   id: generateUniqId(),\n//   name: 'Vibrato',\n//   type: 'VibratoEffect',\n//   node: vibratoNode,\n//   settings: vibratoSettings\n// },\n{\n  id: generateUniqId(),\n  name: 'Channel',\n  type: 'Channel',\n  node: channelNode,\n  settings: channelSettings\n}]; // prettier-ignore nathan taylor 10.7PO sync\n\nvar v = 1;\nvar sequention = new Tone.Sequence(function (time, note) {\n  synthNode.triggerAttackRelease(note, '1m', time);\n}, ['C3', 'D3', 'E2', 'E3'], '1m');\nexport { instrument, sequention };","map":{"version":3,"sources":["/Users/olesyashevchenko/synthExample/app/javascript/tunes/night_synth.js"],"names":["Tone","generateUniqId","synthSettings","volume","detune","portamento","envelope","attack","attackCurve","decay","decayCurve","sustain","release","releaseCurve","oscillator","type","modulationType","phase","harmonicity","autoPannerSettings","wet","frequency","depth","distortionSettings","distortion","oversample","feedbackDelaySettings","delayTime","maxDelay","freeverbSettings","roomSize","dampening","frequencyShifterSettings","jcReverbSettings","phaserSettings","octaves","stages","Q","baseFrequency","pingPongDelaySettings","maxDelayTime","pitchShiftSettings","pitch","windowSize","feedback","reverbSettings","preDelay","stereoWidenerSettings","width","tremoloSettings","spread","vibratoSettings","channelSettings","pan","mute","solo","synthNode","Synth","autoPannerNode","AutoPanner","start","distortionNode","Distortion","pingPongDelayNode","PingPongDelay","reverbNode","Reverb","channelNode","Channel","toDestination","chain","instrument","id","name","node","settings","v","sequention","Sequence","time","note","triggerAttackRelease"],"mappings":"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","sourcesContent":["import * as Tone from 'tone'\nimport { generateUniqId } from '../utilities'\n\nconst synthSettings = {\n  volume: 0,\n  detune: 0,\n  portamento: 0,\n  envelope: {\n    attack: 0.14,\n    attackCurve: 'step',\n    decay: 2,\n    decayCurve: 'exponential',\n    sustain: 0.65,\n    release: 0.5,\n    releaseCurve: 'bounce'\n  },\n  oscillator: {\n    type: 'fatsine',\n    modulationType: 'fatsine',\n    // partialCount: 0,\n    // partials: [],\n    phase: 0,\n    harmonicity: 0\n  }\n}\n\n// const autoFilterSettings = {\n//   wet: 0,\n//   type: 'sine',\n//   frequency: 1,\n//   depth: 1,\n//   baseFrequency: 200,\n//   octaves: 2.6,\n//   filter: {\n//     type: 'lowpass',\n//     frequency: 100,\n//     rolloff: -12,\n//     Q: 1\n//   }\n// }\n\nconst autoPannerSettings = {\n  wet: 0,\n  type: 'sine18',\n  frequency: 40,\n  depth: 1\n}\n\n// const autoWahSettings = {\n//   wet: 0,\n//   baseFrequency: 100,\n//   octaves: 6,\n//   sensitivity: 0,\n//   Q: 2,\n//   gain: 2,\n//   follower: 0.1\n// }\n\n// const bitCrusherSettings = {\n//   wet: 0,\n//   bits: 4\n// }\n\n// const chebyshevSettings = {\n//   wet: 0,\n//   order: 50,\n//   oversample: 'none'\n// }\n//\n// const chorusSettings = {\n//   wet: 0,\n//   type: 'sine',\n//   frequency: 1.5,\n//   delayTime: 3.5,\n//   depth: 0.7,\n//   spread: 180\n// }\n\nconst distortionSettings = {\n  wet: 0.17,\n  distortion: 0.54,\n  oversample: 'none'\n}\n\nconst feedbackDelaySettings = {\n  wet: 0,\n  delayTime: 0.8,\n  maxDelay: 0.8\n}\n\nconst freeverbSettings = {\n  wet: 0.9,\n  roomSize: 0.08,\n  dampening: 40\n}\n\nconst frequencyShifterSettings = {\n  wet: 0,\n  frequency: 42\n}\n\nconst jcReverbSettings = {\n  wet: 0,\n  roomSize: 0.5\n}\n\n// const midSideSettings = {\n//   wet: 0\n// }\n\nconst phaserSettings = {\n  wet: 0,\n  frequency: 0.5,\n  octaves: 3,\n  stages: 10,\n  Q: 10,\n  baseFrequency: 350\n}\n\nconst pingPongDelaySettings = {\n  wet: 0,\n  delayTime: 0.25,\n  maxDelayTime: 1\n}\n\nconst pitchShiftSettings = {\n  wet: 0.75,\n  pitch: 0,\n  windowSize: 0.1,\n  delayTime: 0,\n  feedback: 0.315\n}\n\nconst reverbSettings = {\n  wet: 0.5,\n  decay: 7.15,\n  preDelay: 0.01\n}\n\nconst stereoWidenerSettings = {\n  wet: 0,\n  width: 0.5\n}\n\nconst tremoloSettings = {\n  wet: 0,\n  frequency: 10,\n  type: 'sine',\n  depth: 0.5,\n  spread: 180\n}\n\nconst vibratoSettings = {\n  wet: 0,\n  maxDelay: 0.005,\n  frequency: 5,\n  depth: 0.1,\n  type: 'sine'\n}\n\nconst channelSettings = {\n  volume: -6,\n  pan: 0,\n  mute: false,\n  solo: false\n}\n\nconst synthNode = new Tone.Synth(synthSettings)\n// const autoFilterNode = new Tone.AutoFilter(autoFilterSettings).start()\nconst autoPannerNode = new Tone.AutoPanner(autoPannerSettings).start()\n// const autoWahNode = new Tone.AutoWah(autoWahSettings)\n// // const bitCrusherNode = new Tone.BitCrusher(bitCrusherSettings)\n// const chebyshevNode = new Tone.Chebyshev(chebyshevSettings)\n// const chorusNode = new Tone.Chorus(chorusSettings)\nconst distortionNode = new Tone.Distortion(distortionSettings)\n// const feedbackDelayNode = new Tone.FeedbackDelay(feedbackDelaySettings)\n// const freeverbNode = new Tone.Freeverb(freeverbSettings)\n// const frequencyShifterNode = new Tone.FrequencyShifter(frequencyShifterSettings)\n// const jcReverbNode = new Tone.JCReverb(jcReverbSettings)\n// // const midSideNode = new Tone.MidSideEffect(midSideSettings)\n// const phaserNode = new Tone.Phaser(phaserSettings)\nconst pingPongDelayNode = new Tone.PingPongDelay(pingPongDelaySettings)\n// const pitchShiftNode = new Tone.PitchShift(pitchShiftSettings)\nconst reverbNode = new Tone.Reverb(reverbSettings)\n// const stereoWidenerNode = new Tone.StereoWidener(stereoWidenerSettings)\n// const tremoloNode = new Tone.Tremolo(tremoloSettings)\n// const vibratoNode = new Tone.Vibrato(vibratoSettings)\nconst channelNode = new Tone.Channel(channelSettings).toDestination()\n\nsynthNode.chain(\n  // autoFilterNode,\n  autoPannerNode,\n  // autoWahNode,\n  // // bitCrusherNode,\n  // chebyshevNode,\n  // chorusNode,\n  distortionNode,\n  // feedbackDelayNode,\n  // freeverbNode,\n  // frequencyShifterNode,\n  // jcReverbNode,\n  // // midSideNode,\n  // phaserNode,\n  pingPongDelayNode,\n  // pitchShiftNode,\n  reverbNode,\n  // stereoWidenerNode,\n  // tremoloNode,\n  // vibratoNode,\n  channelNode\n)\n\nconst instrument = [\n  {\n    id: generateUniqId(),\n    name: 'All effect Synth',\n    type: 'ToneSynth',\n    node: synthNode,\n    settings: synthSettings\n  },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Auto Filter',\n  //   type: 'AutoFilterEffect',\n  //   node: autoFilterNode,\n  //   settings: autoFilterSettings\n  // },\n  {\n    id: generateUniqId(),\n    name: 'Auto Panner',\n    type: 'AutoPannerEffect',\n    node: autoPannerNode,\n    settings: autoPannerSettings\n  },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Auto Wah',\n  //   type: 'AutoWahEffect',\n  //   node: autoWahNode,\n  //   settings: autoWahSettings\n  // },\n  // // {\n  // //   id: generateUniqId(),\n  // //   name: 'Bit Crusher',\n  // //   type: 'BitCrusherEffect',\n  // //   node: bitCrusherNode,\n  // //   settings: bitCrusherSettings\n  // // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Chebyshev',\n  //   type: 'ChebyshevEffect',\n  //   node: chebyshevNode,\n  //   settings: chebyshevSettings\n  // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Chorus',\n  //   type: 'ChorusEffect',\n  //   node: chorusNode,\n  //   settings: chorusSettings\n  // },\n  {\n    id: generateUniqId(),\n    name: 'Distortion',\n    type: 'DistortionEffect',\n    node: distortionNode,\n    settings: distortionSettings\n  },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Feedback Delay',\n  //   type: 'FeedbackDelayEffect',\n  //   node: feedbackDelayNode,\n  //   settings: feedbackDelaySettings\n  // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Freeverb',\n  //   type: 'FreeverbEffect',\n  //   node: freeverbNode,\n  //   settings: freeverbSettings\n  // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Frequency Shift',\n  //   type: 'FrequencyShifterEffect',\n  //   node: frequencyShifterNode,\n  //   settings: frequencyShifterSettings\n  // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'JC Reverb',\n  //   type: 'JCReverbEffect',\n  //   node: jcReverbNode,\n  //   settings: jcReverbSettings\n  // },\n  // // {\n  // //   id: generateUniqId(),\n  // //   name: 'Mid Side Effect',\n  // //   type: 'MidSideEffect',\n  // //   node: midSideNode,\n  // //   settings: midSideSettings\n  // // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Phaser',\n  //   type: 'PhaserEffect',\n  //   node: phaserNode,\n  //   settings: phaserSettings\n  // },\n  {\n    id: generateUniqId(),\n    name: 'Ping Pong Delay',\n    type: 'PingPongDelayEffect',\n    node: pingPongDelayNode,\n    settings: pingPongDelaySettings\n  },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Pitch Shift',\n  //   type: 'PitchShiftEffect',\n  //   node: pitchShiftNode,\n  //   settings: pitchShiftSettings\n  // },\n  {\n    id: generateUniqId(),\n    name: 'Reverb',\n    type: 'ReverbEffect',\n    node: reverbNode,\n    settings: reverbSettings\n  },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Stereo Widener',\n  //   type: 'StereoWidenerEffect',\n  //   node: stereoWidenerNode,\n  //   settings: stereoWidenerSettings\n  // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Tremolo',\n  //   type: 'TremoloEffect',\n  //   node: tremoloNode,\n  //   settings: tremoloSettings\n  // },\n  // {\n  //   id: generateUniqId(),\n  //   name: 'Vibrato',\n  //   type: 'VibratoEffect',\n  //   node: vibratoNode,\n  //   settings: vibratoSettings\n  // },\n  {\n    id: generateUniqId(),\n    name: 'Channel',\n    type: 'Channel',\n    node: channelNode,\n    settings: channelSettings\n  }\n]\n\n// prettier-ignore nathan taylor 10.7PO sync\nconst v = 1\n\nconst sequention = new Tone.Sequence(\n  (time, note) => {\n    synthNode.triggerAttackRelease(note, '1m', time)\n  },\n  ['C3', 'D3', 'E2', 'E3'],\n  '1m'\n)\n\nexport { instrument, sequention }\n"]},"metadata":{},"sourceType":"module"}