{"ast":null,"code":"import * as Tone from 'tone';\nimport { generateUniqId } from '../utilities';\nvar synthSettings = {\n  volume: 0,\n  detune: -10,\n  portamento: 0,\n  envelope: {\n    attack: 0,\n    attackCurve: 'linear',\n    decay: 0.2,\n    decayCurve: 'linear',\n    sustain: 0.65,\n    release: 1,\n    releaseCurve: 'sine'\n  },\n  oscillator: {\n    type: 'fatsine',\n    modulationType: 'fatsine',\n    // partialCount: 0,\n    // partials: [],\n    phase: 210,\n    harmonicity: 4.1\n  }\n};\nvar chorusSettings = {\n  wet: 1,\n  type: 'sine',\n  frequency: 40,\n  delayTime: 3.5,\n  depth: 0.5,\n  spread: 180\n};\nvar freeverbSettings = {\n  wet: 0.55,\n  roomSize: 0.23,\n  dampening: 40\n};\nvar pingPongDelaySettings = {\n  wet: 0,\n  delayTime: 0.25,\n  maxDelayTime: 1\n};\nvar tremoloSettings = {\n  wet: 0,\n  frequency: 10,\n  type: 'sine',\n  depth: 0.5,\n  spread: 180\n};\nvar vibratoSettings = {\n  wet: 0,\n  maxDelay: 0.005,\n  frequency: 5,\n  depth: 0.1,\n  type: 'sine'\n};\nvar channelSettings = {\n  volume: -14,\n  pan: 0,\n  mute: false,\n  solo: false\n}; // function instrument() {\n\nvar synthNode = new Tone.Synth(synthSettings);\nvar chorusNode = new Tone.Chorus(chorusSettings).start();\nvar freeverbNode = new Tone.Freeverb(freeverbSettings);\nvar pingPongDelayNode = new Tone.PingPongDelay(pingPongDelaySettings);\nvar tremoloNode = new Tone.Tremolo(tremoloSettings);\nvar vibratoNode = new Tone.Vibrato(vibratoSettings);\nvar channelNode = new Tone.Channel(channelSettings).toDestination();\nsynthNode.chain(pingPongDelayNode, tremoloNode, chorusNode, freeverbNode, vibratoNode, channelNode);\nvar instrument = [{\n  id: generateUniqId(),\n  name: 'Melody Synth',\n  type: 'ToneSynth',\n  node: synthNode,\n  settings: synthSettings\n}, {\n  id: generateUniqId(),\n  name: 'Chorus',\n  type: 'ChorusEffect',\n  node: chorusNode,\n  settings: chorusSettings\n}, {\n  id: generateUniqId(),\n  name: 'Freeverb',\n  type: 'FreeverbEffect',\n  node: freeverbNode,\n  settings: freeverbSettings\n}, {\n  id: generateUniqId(),\n  name: 'Ping Pong Delay',\n  type: 'PingPongDelayEffect',\n  node: pingPongDelayNode,\n  settings: pingPongDelaySettings\n}, {\n  id: generateUniqId(),\n  name: 'Tremolo',\n  type: 'TremoloEffect',\n  node: tremoloNode,\n  settings: tremoloSettings\n}, {\n  id: generateUniqId(),\n  name: 'Vibrato',\n  type: 'VibratoEffect',\n  node: vibratoNode,\n  settings: vibratoSettings\n}, {\n  id: generateUniqId(),\n  name: 'Channel',\n  type: 'Channel',\n  node: channelNode,\n  settings: channelSettings\n}];\nvar v = 1;\nvar part = new Tone.Part(function (time, note) {\n  synthNode.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n}, [{\n  time: '0:0:0',\n  noteName: 'A2',\n  duration: '1n',\n  velocity: v\n}, {\n  time: '1:0:0',\n  noteName: 'C3',\n  duration: '1n',\n  velocity: v\n}, {\n  time: '2:0:0',\n  noteName: 'B1',\n  duration: '1n',\n  velocity: v\n}, {\n  time: '2:1:0',\n  noteName: 'G2',\n  duration: '1n',\n  velocity: v\n} // {\n//   time: '3:0:0',\n//   noteName: 'A2',\n//   duration: '1n',\n//   velocity: v\n// }\n]);\npart.loopEnd = '4m';\npart.loop = true;\nexport { instrument, part };","map":{"version":3,"sources":["/Users/olesyashevchenko/synthExample/app/javascript/tunes/melody_synth.js"],"names":["Tone","generateUniqId","synthSettings","volume","detune","portamento","envelope","attack","attackCurve","decay","decayCurve","sustain","release","releaseCurve","oscillator","type","modulationType","phase","harmonicity","chorusSettings","wet","frequency","delayTime","depth","spread","freeverbSettings","roomSize","dampening","pingPongDelaySettings","maxDelayTime","tremoloSettings","vibratoSettings","maxDelay","channelSettings","pan","mute","solo","synthNode","Synth","chorusNode","Chorus","start","freeverbNode","Freeverb","pingPongDelayNode","PingPongDelay","tremoloNode","Tremolo","vibratoNode","Vibrato","channelNode","Channel","toDestination","chain","instrument","id","name","node","settings","v","part","Part","time","note","triggerAttackRelease","noteName","duration","velocity","loopEnd","loop"],"mappings":"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","sourcesContent":["import * as Tone from 'tone'\nimport { generateUniqId } from '../utilities'\n\nconst synthSettings = {\n  volume: 0,\n  detune: -10,\n  portamento: 0,\n  envelope: {\n    attack: 0,\n    attackCurve: 'linear',\n    decay: 0.2,\n    decayCurve: 'linear',\n    sustain: 0.65,\n    release: 1,\n    releaseCurve: 'sine'\n  },\n  oscillator: {\n    type: 'fatsine',\n    modulationType: 'fatsine',\n    // partialCount: 0,\n    // partials: [],\n    phase: 210,\n    harmonicity: 4.1\n  }\n}\n\nconst chorusSettings = {\n  wet: 1,\n  type: 'sine',\n  frequency: 40,\n  delayTime: 3.5,\n  depth: 0.5,\n  spread: 180\n}\n\nconst freeverbSettings = {\n  wet: 0.55,\n  roomSize: 0.23,\n  dampening: 40\n}\n\nconst pingPongDelaySettings = {\n  wet: 0,\n  delayTime: 0.25,\n  maxDelayTime: 1\n}\n\nconst tremoloSettings = {\n  wet: 0,\n  frequency: 10,\n  type: 'sine',\n  depth: 0.5,\n  spread: 180\n}\n\nconst vibratoSettings = {\n  wet: 0,\n  maxDelay: 0.005,\n  frequency: 5,\n  depth: 0.1,\n  type: 'sine'\n}\n\nconst channelSettings = {\n  volume: -14,\n  pan: 0,\n  mute: false,\n  solo: false\n}\n\n// function instrument() {\nconst synthNode = new Tone.Synth(synthSettings)\nconst chorusNode = new Tone.Chorus(chorusSettings).start()\nconst freeverbNode = new Tone.Freeverb(freeverbSettings)\nconst pingPongDelayNode = new Tone.PingPongDelay(pingPongDelaySettings)\nconst tremoloNode = new Tone.Tremolo(tremoloSettings)\nconst vibratoNode = new Tone.Vibrato(vibratoSettings)\nconst channelNode = new Tone.Channel(channelSettings).toDestination()\n\nsynthNode.chain(\n  pingPongDelayNode,\n  tremoloNode,\n  chorusNode,\n  freeverbNode,\n  vibratoNode,\n  channelNode\n)\n\nconst instrument = [\n  {\n    id: generateUniqId(),\n    name: 'Melody Synth',\n    type: 'ToneSynth',\n    node: synthNode,\n    settings: synthSettings\n  },\n  {\n    id: generateUniqId(),\n    name: 'Chorus',\n    type: 'ChorusEffect',\n    node: chorusNode,\n    settings: chorusSettings\n  },\n  {\n    id: generateUniqId(),\n    name: 'Freeverb',\n    type: 'FreeverbEffect',\n    node: freeverbNode,\n    settings: freeverbSettings\n  },\n  {\n    id: generateUniqId(),\n    name: 'Ping Pong Delay',\n    type: 'PingPongDelayEffect',\n    node: pingPongDelayNode,\n    settings: pingPongDelaySettings\n  },\n  {\n    id: generateUniqId(),\n    name: 'Tremolo',\n    type: 'TremoloEffect',\n    node: tremoloNode,\n    settings: tremoloSettings\n  },\n  {\n    id: generateUniqId(),\n    name: 'Vibrato',\n    type: 'VibratoEffect',\n    node: vibratoNode,\n    settings: vibratoSettings\n  },\n  {\n    id: generateUniqId(),\n    name: 'Channel',\n    type: 'Channel',\n    node: channelNode,\n    settings: channelSettings\n  }\n]\n\nconst v = 1\n\nconst part = new Tone.Part(\n  function (time, note) {\n    synthNode.triggerAttackRelease(\n      note.noteName,\n      note.duration,\n      time,\n      note.velocity\n    )\n  },\n  [\n    {\n      time: '0:0:0',\n      noteName: 'A2',\n      duration: '1n',\n      velocity: v\n    },\n    {\n      time: '1:0:0',\n      noteName: 'C3',\n      duration: '1n',\n      velocity: v\n    },\n    {\n      time: '2:0:0',\n      noteName: 'B1',\n      duration: '1n',\n      velocity: v\n    },\n    {\n      time: '2:1:0',\n      noteName: 'G2',\n      duration: '1n',\n      velocity: v\n    }\n    // {\n    //   time: '3:0:0',\n    //   noteName: 'A2',\n    //   duration: '1n',\n    //   velocity: v\n    // }\n  ]\n)\n\npart.loopEnd = '4m'\npart.loop = true\n\nexport { instrument, part }\n"]},"metadata":{},"sourceType":"module"}