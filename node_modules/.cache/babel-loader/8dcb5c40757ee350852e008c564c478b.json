{"ast":null,"code":"var _jsxFileName = \"/Users/olesyashevchenko/synthExample/app/javascript/containers/SynthContainer.jsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport * as Tone from 'tone'; // import * as melodySynth from '../tunes/melody_synth'\n// import * as bassSynth from '../tunes/bass_synth'\n// import * as spaceSynth from '../tunes/space_synth'\n\nimport * as allEffectsSynth from '../tunes/all_effects_synth';\nimport React, { PureComponent } from 'react';\nimport WelcomeScreen from '../views/WelcomeScreen';\nimport SynthRoom from '../views/SynthRoom';\n\nvar SynthContainer = /*#__PURE__*/function (_PureComponent) {\n  _inherits(SynthContainer, _PureComponent);\n\n  var _super = _createSuper(SynthContainer);\n\n  function SynthContainer(props) {\n    var _this;\n\n    _classCallCheck(this, SynthContainer);\n\n    _this = _super.call(this, props);\n    _this.startWebAudio = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Tone.start();\n\n            case 2:\n              _this.initInstruments();\n\n              _this.setState({\n                webAudioStarted: true\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.initInstruments = function () {\n      Tone.Transport.bpm.value = 120;\n      Tone.Transport.start(); // melodySynth.part.start()\n      // bassSynth.sequention.start(0)\n      // spaceSynth.sequention.start(0)\n\n      allEffectsSynth.part.start();\n      var instruments = [// melodySynth.instrument,\n      // bassSynth.instrument,\n      // spaceSynth.instrument,\n      allEffectsSynth.instrument];\n\n      _this.setState({\n        instruments: instruments\n      });\n    };\n\n    _this.handlePropertyValueChange = function (id, property, value) {\n      console.log(property, value);\n      var instruments = [];\n\n      _this.state.instruments.forEach(function (instrument, i) {\n        var newInstrument = [];\n        instrument.forEach(function (instrumentModule, i) {\n          var newInstrumentModule = Object.assign({}, instrumentModule);\n\n          if (instrumentModule.id === id) {\n            if (property.length === 1) {\n              var propertyName = property[0];\n              newInstrumentModule.settings[propertyName] = value;\n            } else if (property.length === 2) {\n              var scopeName = property[0];\n              var _propertyName = property[1];\n              newInstrumentModule.settings[scopeName][_propertyName] = value;\n            }\n          }\n\n          newInstrument.push(newInstrumentModule);\n        });\n        instruments.push(newInstrument);\n      });\n\n      _this.setState({\n        instruments: instruments\n      });\n    };\n\n    _this.renderWelcomeScreen = function () {\n      return /*#__PURE__*/React.createElement(WelcomeScreen, {\n        handleStartWebAudio: _this.startWebAudio,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 12\n        }\n      });\n    };\n\n    _this.renderSynthRoom = function () {\n      var instruments = _this.state.instruments;\n      return /*#__PURE__*/React.createElement(SynthRoom, {\n        instruments: instruments,\n        handlePropertyValueChange: _this.handlePropertyValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.state = {\n      webAudioStarted: false,\n      instruments: []\n    };\n    return _this;\n  }\n\n  _createClass(SynthContainer, [{\n    key: \"render\",\n    value: function render() {\n      var webAudioStarted = this.state.webAudioStarted;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"SynthContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      }, webAudioStarted === true ? this.renderSynthRoom() : this.renderWelcomeScreen());\n    }\n  }]);\n\n  return SynthContainer;\n}(PureComponent);\n\nexport { SynthContainer as default };","map":{"version":3,"sources":["/Users/olesyashevchenko/synthExample/app/javascript/containers/SynthContainer.jsx"],"names":["Tone","allEffectsSynth","React","PureComponent","WelcomeScreen","SynthRoom","SynthContainer","props","startWebAudio","start","initInstruments","setState","webAudioStarted","Transport","bpm","value","part","instruments","instrument","handlePropertyValueChange","id","property","console","log","state","forEach","i","newInstrument","instrumentModule","newInstrumentModule","Object","assign","length","propertyName","settings","scopeName","push","renderWelcomeScreen","renderSynthRoom"],"mappings":"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","sourcesContent":["import * as Tone from 'tone'\n// import * as melodySynth from '../tunes/melody_synth'\n// import * as bassSynth from '../tunes/bass_synth'\n// import * as spaceSynth from '../tunes/space_synth'\nimport * as allEffectsSynth from '../tunes/all_effects_synth'\n\nimport React, { PureComponent } from 'react'\n\nimport WelcomeScreen from '../views/WelcomeScreen'\nimport SynthRoom from '../views/SynthRoom'\n\nexport default class SynthContainer extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      webAudioStarted: false,\n      instruments: []\n    }\n  }\n\n  startWebAudio = async () => {\n    await Tone.start()\n    this.initInstruments()\n\n    this.setState({\n      webAudioStarted: true\n    })\n  }\n\n  initInstruments = () => {\n    Tone.Transport.bpm.value = 120\n    Tone.Transport.start()\n\n    // melodySynth.part.start()\n    // bassSynth.sequention.start(0)\n    // spaceSynth.sequention.start(0)\n    allEffectsSynth.part.start()\n\n    const instruments = [\n      // melodySynth.instrument,\n      // bassSynth.instrument,\n      // spaceSynth.instrument,\n      allEffectsSynth.instrument\n    ]\n\n    this.setState({ instruments })\n  }\n\n  handlePropertyValueChange = (id, property, value) => {\n    console.log(property, value)\n    const instruments = []\n\n    this.state.instruments.forEach((instrument, i) => {\n      const newInstrument = []\n\n      instrument.forEach((instrumentModule, i) => {\n        const newInstrumentModule = Object.assign({}, instrumentModule)\n\n        if (instrumentModule.id === id) {\n          if (property.length === 1) {\n            const propertyName = property[0]\n            newInstrumentModule.settings[propertyName] = value\n          } else if (property.length === 2) {\n            const scopeName = property[0]\n            const propertyName = property[1]\n            newInstrumentModule.settings[scopeName][propertyName] = value\n          }\n        }\n\n        newInstrument.push(newInstrumentModule)\n      })\n\n      instruments.push(newInstrument)\n    })\n\n    this.setState({\n      instruments\n    })\n  }\n\n  renderWelcomeScreen = () => {\n    return <WelcomeScreen handleStartWebAudio={this.startWebAudio} />\n  }\n\n  renderSynthRoom = () => {\n    const { instruments } = this.state\n\n    return (\n      <SynthRoom\n        instruments={instruments}\n        handlePropertyValueChange={this.handlePropertyValueChange}\n      />\n    )\n  }\n\n  render() {\n    const { webAudioStarted } = this.state\n\n    return (\n      <div className=\"SynthContainer\">\n        {webAudioStarted === true\n          ? this.renderSynthRoom()\n          : this.renderWelcomeScreen()}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}