{"ast":null,"code":"var _jsxFileName = \"/Users/olesyashevchenko/synthExample/app/javascript/module_components/AutoFilterEffect.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Slider from '../control_components/Slider';\nimport ButtonSet from '../control_components/ButtonSet';\n\nvar AutoFilterEffect = /*#__PURE__*/function (_Component) {\n  _inherits(AutoFilterEffect, _Component);\n\n  var _super = _createSuper(AutoFilterEffect);\n\n  function AutoFilterEffect(props) {\n    var _this;\n\n    _classCallCheck(this, AutoFilterEffect);\n\n    _this = _super.call(this, props);\n\n    _this.updateNodeParams = function () {\n      var _this$props = _this.props,\n          node = _this$props.node,\n          settings = _this$props.settings;\n      var wet = settings.wet,\n          type = settings.type,\n          frequency = settings.frequency,\n          depth = settings.depth,\n          baseFrequency = settings.baseFrequency,\n          octaves = settings.octaves,\n          filter = settings.filter;\n      node.wet.value = wet;\n      node.type = type;\n      node.frequency.value = frequency;\n      node.depth.value = depth;\n      node.baseFrequency = baseFrequency;\n      node.octaves = octaves;\n      node.filter.type = filter.type;\n      node.filter.frequency.value = filter.frequency;\n      node.filter.rolloff = filter.rolloff;\n      node.filter.Q.value = filter.Q;\n    };\n\n    _this.handlePropertyValueChange = function (property, value) {\n      var _this$props2 = _this.props,\n          id = _this$props2.id,\n          handlePropertyValueChange = _this$props2.handlePropertyValueChange;\n      handlePropertyValueChange(id, property, value);\n    };\n\n    return _this;\n  }\n\n  _createClass(AutoFilterEffect, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          name = _this$props3.name,\n          settings = _this$props3.settings;\n      var wet = settings.wet,\n          type = settings.type,\n          frequency = settings.frequency,\n          depth = settings.depth,\n          baseFrequency = settings.baseFrequency,\n          octaves = settings.octaves,\n          filter = settings.filter;\n      var oscillatorTypes = ['sine', 'square', 'triangle', 'sawtooth'];\n      var filterTypes = ['lowpass', 'highpass', 'bandpass', 'lowshelf', 'highshelf', 'notch', 'allpass', 'peaking'];\n      var rolloffTypes = [-12, -24, -48, -96];\n      this.updateNodeParams();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"AutoFilterEffect\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, name), /*#__PURE__*/React.createElement(Slider, {\n        name: \"Wet\",\n        property: ['wet'],\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: wet,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ButtonSet, {\n        name: \"Type\",\n        property: ['type'],\n        value: type,\n        options: oscillatorTypes,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Slider, {\n        name: \"Frequency\",\n        property: ['frequency'],\n        min: 0,\n        max: 100,\n        step: 0.01,\n        value: frequency,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Slider, {\n        name: \"Depth\",\n        property: ['depth'],\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: depth,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Slider, {\n        name: \"Base Frequency\",\n        property: ['baseFrequency'],\n        min: 0,\n        max: 1000,\n        step: 1,\n        value: baseFrequency,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Slider, {\n        name: \"Octaves\",\n        property: ['octaves'],\n        min: 0,\n        max: 6,\n        step: 0.1,\n        value: octaves,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }\n      }, \"Filter\"), /*#__PURE__*/React.createElement(ButtonSet, {\n        name: \"Type\",\n        property: ['filter', 'type'],\n        value: filter.type,\n        options: filterTypes,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Slider, {\n        name: \"Frequency\",\n        property: ['filter', 'frequency'],\n        min: 0,\n        max: 1000,\n        step: 1,\n        value: filter.frequency,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ButtonSet, {\n        name: \"Rolloff\",\n        property: ['filter', 'rolloff'],\n        value: filter.rolloff,\n        options: rolloffTypes,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Slider, {\n        name: \"Q\",\n        property: ['filter', 'Q'],\n        min: 0,\n        max: 10,\n        step: 0.01,\n        value: filter.Q,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return AutoFilterEffect;\n}(Component);\n\nexport { AutoFilterEffect as default };\nAutoFilterEffect.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  node: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired,\n  handlePropertyValueChange: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/olesyashevchenko/synthExample/app/javascript/module_components/AutoFilterEffect.jsx"],"names":["PropTypes","React","Component","Slider","ButtonSet","AutoFilterEffect","props","updateNodeParams","node","settings","wet","type","frequency","depth","baseFrequency","octaves","filter","value","rolloff","Q","handlePropertyValueChange","property","id","name","oscillatorTypes","filterTypes","rolloffTypes","propTypes","number","isRequired","string","object","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nimport Slider from '../control_components/Slider'\nimport ButtonSet from '../control_components/ButtonSet'\n\nexport default class AutoFilterEffect extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  updateNodeParams = () => {\n    const { node, settings } = this.props\n\n    const {\n      wet,\n      type,\n      frequency,\n      depth,\n      baseFrequency,\n      octaves,\n      filter\n    } = settings\n\n    node.wet.value = wet\n    node.type = type\n    node.frequency.value = frequency\n    node.depth.value = depth\n    node.baseFrequency = baseFrequency\n    node.octaves = octaves\n    node.filter.type = filter.type\n    node.filter.frequency.value = filter.frequency\n    node.filter.rolloff = filter.rolloff\n    node.filter.Q.value = filter.Q\n  }\n\n  handlePropertyValueChange = (property, value) => {\n    const { id, handlePropertyValueChange } = this.props\n    handlePropertyValueChange(id, property, value)\n  }\n\n  render() {\n    const { name, settings } = this.props\n\n    const {\n      wet,\n      type,\n      frequency,\n      depth,\n      baseFrequency,\n      octaves,\n      filter\n    } = settings\n\n    const oscillatorTypes = ['sine', 'square', 'triangle', 'sawtooth']\n\n    const filterTypes = [\n      'lowpass',\n      'highpass',\n      'bandpass',\n      'lowshelf',\n      'highshelf',\n      'notch',\n      'allpass',\n      'peaking'\n    ]\n\n    const rolloffTypes = [-12, -24, -48, -96]\n\n    this.updateNodeParams()\n\n    return (\n      <div className=\"AutoFilterEffect\">\n        <h1>{name}</h1>\n\n        <Slider\n          name=\"Wet\"\n          property={['wet']}\n          min={0}\n          max={1}\n          step={0.01}\n          value={wet}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <ButtonSet\n          name=\"Type\"\n          property={['type']}\n          value={type}\n          options={oscillatorTypes}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <Slider\n          name=\"Frequency\"\n          property={['frequency']}\n          min={0}\n          max={100}\n          step={0.01}\n          value={frequency}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <Slider\n          name=\"Depth\"\n          property={['depth']}\n          min={0}\n          max={1}\n          step={0.01}\n          value={depth}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <Slider\n          name=\"Base Frequency\"\n          property={['baseFrequency']}\n          min={0}\n          max={1000}\n          step={1}\n          value={baseFrequency}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <Slider\n          name=\"Octaves\"\n          property={['octaves']}\n          min={0}\n          max={6}\n          step={0.1}\n          value={octaves}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <h2>Filter</h2>\n\n        <ButtonSet\n          name=\"Type\"\n          property={['filter', 'type']}\n          value={filter.type}\n          options={filterTypes}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <Slider\n          name=\"Frequency\"\n          property={['filter', 'frequency']}\n          min={0}\n          max={1000}\n          step={1}\n          value={filter.frequency}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <ButtonSet\n          name=\"Rolloff\"\n          property={['filter', 'rolloff']}\n          value={filter.rolloff}\n          options={rolloffTypes}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <Slider\n          name=\"Q\"\n          property={['filter', 'Q']}\n          min={0}\n          max={10}\n          step={0.01}\n          value={filter.Q}\n          handleChange={this.handlePropertyValueChange}\n        />\n      </div>\n    )\n  }\n}\n\nAutoFilterEffect.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  node: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired,\n  handlePropertyValueChange: PropTypes.func.isRequired\n}\n"]},"metadata":{},"sourceType":"module"}