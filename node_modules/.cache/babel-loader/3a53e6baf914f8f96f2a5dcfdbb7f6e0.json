{"ast":null,"code":"var _jsxFileName = \"/Users/olesyashevchenko/synthExample/app/javascript/module_components/TremoloEffect.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Slider from '../control_components/Slider';\nimport ButtonSet from '../control_components/ButtonSet';\n\nvar TremoloEffect = /*#__PURE__*/function (_Component) {\n  _inherits(TremoloEffect, _Component);\n\n  var _super = _createSuper(TremoloEffect);\n\n  function TremoloEffect(props) {\n    var _this;\n\n    _classCallCheck(this, TremoloEffect);\n\n    _this = _super.call(this, props);\n\n    _this.updateNodeParams = function () {\n      // frequency: 10,\n      // type: 'sine',\n      // depth: 0.5,\n      // spread: 180\n      var _this$props = _this.props,\n          node = _this$props.node,\n          settings = _this$props.settings;\n      var wet = settings.wet,\n          frequency = settings.frequency,\n          type = settings.type,\n          depth = settings.depth,\n          spread = settings.spread;\n      node.wet.value = wet;\n      node.frequency.value = frequency;\n      node.type = type;\n      node.depth.value = depth;\n      node.spread = spread;\n    };\n\n    _this.handlePropertyValueChange = function (property, value) {\n      var _this$props2 = _this.props,\n          id = _this$props2.id,\n          handlePropertyValueChange = _this$props2.handlePropertyValueChange;\n      handlePropertyValueChange(id, property, value);\n    };\n\n    return _this;\n  } // Можно спользовать обновление тут, так как\n  // componentDidUpdate() {\n  // this.updateNodeParams()\n  // }\n\n\n  _createClass(TremoloEffect, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          name = _this$props3.name,\n          settings = _this$props3.settings;\n      var wet = settings.wet,\n          type = settings.type,\n          frequency = settings.frequency,\n          delayTime = settings.delayTime,\n          depth = settings.depth,\n          spread = settings.spread;\n      var oscillatorTypes = ['sine', 'square', 'triangle', 'sawtooth'];\n      this.updateNodeParams();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"TremoloEffect\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, name), /*#__PURE__*/React.createElement(Slider, {\n        name: \"Wet\",\n        property: ['wet'],\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: wet,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Slider, {\n        name: \"Frequency\",\n        property: ['frequency'],\n        min: 0,\n        max: 100,\n        step: 1,\n        value: frequency,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ButtonSet, {\n        name: \"Type\",\n        property: ['type'],\n        value: type,\n        options: oscillatorTypes,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Slider, {\n        name: \"Depth\",\n        property: ['depth'],\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: depth,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Slider, {\n        name: \"Spread\",\n        property: ['spread'],\n        min: 0,\n        max: 180,\n        step: 1,\n        value: spread,\n        handleChange: this.handlePropertyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return TremoloEffect;\n}(Component);\n\nexport { TremoloEffect as default };\nTremoloEffect.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  node: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired,\n  handlePropertyValueChange: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/olesyashevchenko/synthExample/app/javascript/module_components/TremoloEffect.jsx"],"names":["PropTypes","React","Component","Slider","ButtonSet","TremoloEffect","props","updateNodeParams","node","settings","wet","frequency","type","depth","spread","value","handlePropertyValueChange","property","id","name","delayTime","oscillatorTypes","propTypes","number","isRequired","string","object","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nimport Slider from '../control_components/Slider'\nimport ButtonSet from '../control_components/ButtonSet'\n\nexport default class TremoloEffect extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  // Можно спользовать обновление тут, так как\n  // componentDidUpdate() {\n  // this.updateNodeParams()\n  // }\n\n  updateNodeParams = () => {\n    // frequency: 10,\n    // type: 'sine',\n    // depth: 0.5,\n    // spread: 180\n    const { node, settings } = this.props\n    const { wet, frequency, type, depth, spread } = settings\n\n    node.wet.value = wet\n    node.frequency.value = frequency\n    node.type = type\n    node.depth.value = depth\n    node.spread = spread\n  }\n\n  handlePropertyValueChange = (property, value) => {\n    const { id, handlePropertyValueChange } = this.props\n    handlePropertyValueChange(id, property, value)\n  }\n\n  render() {\n    const { name, settings } = this.props\n    const { wet, type, frequency, delayTime, depth, spread } = settings\n    const oscillatorTypes = ['sine', 'square', 'triangle', 'sawtooth']\n\n    this.updateNodeParams()\n\n    return (\n      <div className=\"TremoloEffect\">\n        <h1>{name}</h1>\n\n        <Slider\n          name=\"Wet\"\n          property={['wet']}\n          min={0}\n          max={1}\n          step={0.01}\n          value={wet}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <Slider\n          name=\"Frequency\"\n          property={['frequency']}\n          min={0}\n          max={100}\n          step={1}\n          value={frequency}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <ButtonSet\n          name=\"Type\"\n          property={['type']}\n          value={type}\n          options={oscillatorTypes}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <Slider\n          name=\"Depth\"\n          property={['depth']}\n          min={0}\n          max={1}\n          step={0.01}\n          value={depth}\n          handleChange={this.handlePropertyValueChange}\n        />\n\n        <Slider\n          name=\"Spread\"\n          property={['spread']}\n          min={0}\n          max={180}\n          step={1}\n          value={spread}\n          handleChange={this.handlePropertyValueChange}\n        />\n      </div>\n    )\n  }\n}\n\nTremoloEffect.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  node: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired,\n  handlePropertyValueChange: PropTypes.func.isRequired\n}\n"]},"metadata":{},"sourceType":"module"}